(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{385:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-cloud-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-config"}},[t._v("#")]),t._v(" Spring Cloud Config")]),t._v(" "),s("p",[s("strong",[t._v("2.2.1。发布")])]),t._v(" "),s("p",[t._v("Spring Cloud Config为分布式系统中的外部化配置提供服务器端和客户端支持。使用Config Server，您可以在中心位置管理所有环境中应用程序的外部属性。客户端和服务器上的概念与Spring "),s("code",[t._v("Environment")]),t._v("和"),s("code",[t._v("PropertySource")]),t._v("抽象，因此它们非常适合Spring应用程序，但可以与以任何语言运行的任何应用程序一起使用。在应用程序从开发人员到测试人员再到生产人员的整个部署过程中，您可以管理这些环境之间的配置，并确保应用程序具有它们迁移时所需的一切。服务器存储后端的默认实现使用git，因此它轻松支持带标签的配置环境版本，并且可以通过各种工具来访问这些内容来管理内容。添加替代实现并将其插入Spring配置很容易。")]),t._v(" "),s("h2",{attrs:{id:"快速开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_quick_start",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速开始"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该快速入门介绍了如何同时使用Spring Cloud Config Server的服务器和客户端。")]),t._v(" "),s("p",[t._v("首先，启动服务器，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ cd spring-cloud-config-server\n$ ../mvnw spring-boot：run\n")])])]),s("p",[t._v("该服务器是Spring Boot应用程序，因此如果愿意，可以从IDE运行它（主类是"),s("code",[t._v("ConfigServerApplication")]),t._v("）。")]),t._v(" "),s("p",[t._v("接下来尝试一个客户端，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ curl localhost:8888/foo/development\n{"name":"foo","label":"master","propertySources":[\n  {"name":"https://github.com/scratches/config-repo/foo-development.properties","source":{"bar":"spam"}},\n  {"name":"https://github.com/scratches/config-repo/foo.properties","source":{"foo":"bar"}}\n]}\n')])])]),s("p",[t._v("定位属性源的默认策略是克隆git存储库（位于"),s("code",[t._v("spring.cloud.config.server.git.uri")]),t._v("）并使用它初始化mini "),s("code",[t._v("SpringApplication")]),t._v("。迷你应用程序"),s("code",[t._v("Environment")]),t._v("用于枚举属性源并将其发布在JSON端点上。")]),t._v(" "),s("p",[t._v("HTTP服务具有以下形式的资源：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/ {application} / {profile} [/ {label}]\n/{application}-{profile}.yml\n/{label}/{application}-{profile}.yml\n/{application}-{profile}.properties\n/{label}/{application}-{profile}.properties\n")])])]),s("p",[t._v("其中"),s("code",[t._v("application")]),t._v("注入作为"),s("code",[t._v("spring.config.name")]),t._v("在"),s("code",[t._v("SpringApplication")]),t._v("（什么是通常"),s("code",[t._v("application")]),t._v("以规则的弹簧引导应用程序），"),s("code",[t._v("profile")]),t._v("是一个有效简表（或逗号分隔的属性列表），并且"),s("code",[t._v("label")]),t._v("是一个可选的git标签（默认为"),s("code",[t._v("master")]),t._v("）。")]),t._v(" "),s("p",[t._v("Spring Cloud Config Server从各种来源提取远程客户端的配置。以下示例从git存储库（必须提供）中获取配置，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n")])])]),s("p",[t._v("其他来源包括任何与JDBC兼容的数据库，Subversion，Hashicorp Vault，Credhub和本地文件系统。")]),t._v(" "),s("h3",{attrs:{id:"客户端使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端使用"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_client_side_usage",target:"_blank",rel:"noopener noreferrer"}},[t._v("客户端使用"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要在应用程序中使用这些功能，您可以将其构建为依赖于spring-cloud-config-client的Spring Boot应用程序（例如，请参阅config-client或示例应用程序的测试用例）。添加依赖项最方便的方法是使用Spring Boot启动器"),s("code",[t._v("org.springframework.cloud:spring-cloud-starter-config")]),t._v("。"),s("code",[t._v("spring-cloud-starter-parent")]),t._v("对于Maven用户，还有一个父pom和BOM（），对于Gradle和Spring CLI用户，还有一个Spring IO版本管理属性文件。以下示例显示了典型的Maven配置：")]),t._v(" "),s("p",[t._v("pom.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-parent"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{spring-boot-docs-version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("relativePath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- lookup parent from repository --\x3e")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencyManagement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-dependencies"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{spring-cloud-version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("import"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencyManagement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-config"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-maven-plugin"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- repositories also needed for snapshots and milestones --\x3e")]),t._v("\n")])])]),s("p",[t._v("现在，您可以创建一个标准的Spring Boot应用程序，例如以下HTTP服务器：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("home")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当此HTTP服务器运行时，它将从端口8888上的默认本地配置服务器（如果正在运行）中拾取外部配置。要修改启动行为，可以使用以下命令更改配置服务器的位置"),s("code",[t._v("bootstrap.properties")]),t._v("（类似于，"),s("code",[t._v("application.properties")]),t._v("但对于应用程序上下文的引导阶段），如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.config.uri：http：//myconfigserver.com\n")])])]),s("p",[t._v("默认情况下，如果未设置应用程序名称，"),s("code",[t._v("application")]),t._v("将使用。要修改名称，可以将以下属性添加到"),s("code",[t._v("bootstrap.properties")]),t._v("文件中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.application.name：myapp\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("设置属性时，"),s("code",[t._v("${spring.application.name}")]),t._v("请勿在您的应用名称前加上保留字，"),s("code",[t._v("application-")]),t._v("以防止解析正确的属性源时出现问题。")])]),t._v(" "),s("p",[t._v("引导程序属性在"),s("code",[t._v("/env")]),t._v("端点中显示为高优先级属性源，如以下示例所示。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ curl localhost:8080/env\n{\n  "profiles":[],\n  "configService:https://github.com/spring-cloud-samples/config-repo/bar.properties":{"foo":"bar"},\n  "servletContextInitParams":{},\n  "systemProperties":{...},\n  ...\n}\n')])])]),s("p",[t._v("名为的属性源```configService:/"),s("code",[t._v("包含")]),t._v("foo"),s("code",[t._v("值为")]),t._v("bar`且具有最高优先级的属性。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("属性源名称中的URL是git存储库，而不是配置服务器URL。")])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"spring-cloud-config服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-config服务器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_spring_cloud_config_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Config服务器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server为外部配置（名称-值对或等效的YAML内容）提供了一个基于HTTP资源的API。通过使用"),s("code",[t._v("@EnableConfigServer")]),t._v("注释，服务器可嵌入到Spring Boot应用程序中。因此，以下应用程序是配置服务器：")]),t._v(" "),s("p",[t._v("ConfigServer.java")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableConfigServer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigServer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("像所有Spring Boot应用程序一样，它默认在端口8080上运行，但是您可以通过各种方式将其切换到更传统的端口8888。最简单的方法是（通过Config Server jar中"),s("code",[t._v("spring.config.name=configserver")]),t._v("有一个）启动它，从而设置默认配置存储库"),s("code",[t._v("configserver.yml")]),t._v("。另一种是使用您自己的"),s("code",[t._v("application.properties")]),t._v("，如以下示例所示：")]),t._v(" "),s("p",[t._v("application.properties")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("server.port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("8888")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.cloud.config.server.git.uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("file://${user.home}/config-repo")]),t._v("\n")])])]),s("p",[t._v("哪里"),s("code",[t._v("${user.home}/config-repo")]),t._v("是一个包含YAML和属性文件的git存储库。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("在Windows上，如果文件URL带有驱动器前缀（例如，"),s("code",[t._v("file:///${user.home}/config-repo")]),t._v("）是绝对的，则在文件URL中需要一个额外的“ /” 。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("以下清单显示了在前面的示例中创建git存储库的方法："),s("code",[t._v("$ cd $ HOME $ mkdir config-repo $ cd config-repo $ git初始化。 $ echo info.foo：栏> application.properties $ git add -A。 $ git commit -m“添加application.properties”")])])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("将本地文件系统用于git存储库仅用于测试。您应该使用服务器在生产环境中托管配置存储库。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("如果仅在其中存储文本文件，则配置存储库的初始克隆可以快速有效。如果存储二进制文件（尤其是大文件），则可能会在首次配置请求时遇到延迟，或者在服务器中遇到内存不足错误。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h3",{attrs:{id:"环境资料库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境资料库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_environment_repository",target:"_blank",rel:"noopener noreferrer"}},[t._v("环境资料库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您应该在哪里存储配置服务器的配置数据？控制此行为的策略是"),s("code",[t._v("EnvironmentRepository")]),t._v("服务"),s("code",[t._v("Environment")]),t._v("对象。这"),s("code",[t._v("Environment")]),t._v("是Spring的域的浅表副本"),s("code",[t._v("Environment")]),t._v("（包括"),s("code",[t._v("propertySources")]),t._v("作为主要功能）。该"),s("code",[t._v("Environment")]),t._v("资源由三个变量参数化：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("{application}")]),t._v("，它映射到"),s("code",[t._v("spring.application.name")]),t._v("客户端。")]),t._v(" "),s("li",[s("code",[t._v("{profile}")]),t._v("，它映射到"),s("code",[t._v("spring.profiles.active")]),t._v("客户端（逗号分隔列表）上。")]),t._v(" "),s("li",[s("code",[t._v("{label}")]),t._v("，这是服务器端功能，标记了一组“版本化”的配置文件。")])]),t._v(" "),s("p",[t._v("仓库实现通常表现得像一个Spring Boot应用程序，从"),s("code",[t._v("spring.config.name")]),t._v("等于"),s("code",[t._v("{application}")]),t._v("参数且"),s("code",[t._v("spring.profiles.active")]),t._v("等于参数的位置加载配置文件"),s("code",[t._v("{profiles}")]),t._v("。配置文件的优先级规则也与常规Spring Boot应用程序中的规则相同：活动配置文件优先于默认配置，如果有多个配置文件，则最后一个优先（类似于向中添加条目"),s("code",[t._v("Map")]),t._v("）。")]),t._v(" "),s("p",[t._v("以下示例客户端应用程序具有此引导程序配置：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mysql\n")])])]),s("p",[t._v("（与Spring Boot应用程序一样，这些属性也可以由环境变量或命令行参数设置）。")]),t._v(" "),s("p",[t._v("如果存储库是基于文件的，服务器的创建 "),s("code",[t._v("Environment")]),t._v("从"),s("code",[t._v("application.yml")]),t._v("（所有客户端之间共享）和 "),s("code",[t._v("foo.yml")]),t._v("（与"),s("code",[t._v("foo.yml")]),t._v("采取优先次序）。如果YAML文件中包含指向Spring概要文件的文档，则会以更高的优先级应用这些文件（按列出的概要文件的顺序）。如果存在特定于配置文件的YAML（或属性）文件，这些文件也将以比默认文件更高的优先级应用。较高的优先级将转换为"),s("code",[t._v("PropertySource")]),t._v("早些时候上市"),s("code",[t._v("Environment")]),t._v("。（这些规则适用于独立的Spring Boot应用程序。）")]),t._v(" "),s("p",[t._v("您可以将spring.cloud.config.server.accept-empty设置为false，以便在未找到应用程序的情况下Server返回HTTP 404状态。默认情况下，此标志设置为true。")]),t._v(" "),s("h4",{attrs:{id:"git后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_git_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("的默认实现"),s("code",[t._v("EnvironmentRepository")]),t._v("使用Git后端，这对于管理升级和物理环境以及审核更改非常方便。要更改存储库的位置，可以"),s("code",[t._v("spring.cloud.config.server.git.uri")]),t._v("在Config Server中设置配置属性（例如，在中"),s("code",[t._v("application.yml")]),t._v("）。如果您使用"),s("code",[t._v("file:")]),t._v("前缀，它应该在本地存储库中运行，以便无需服务器即可快速轻松地开始使用。但是，在那种情况下，服务器直接在本地存储库上运行而无需克隆它（如果它不是裸露的，这并不重要，因为Config Server从不对“远程”存储库进行更改）。要扩展Config Server并使其高度可用，您需要使服务器的所有实例都指向同一存储库，因此仅共享文件系统可以工作。即使在那种情况下，最好对"),s("code",[t._v("ssh:")]),t._v("共享文件系统存储库使用该协议，以便服务器可以克隆该协议并将本地工作副本用作高速缓存。")]),t._v(" "),s("p",[t._v("此存储库实现将"),s("code",[t._v("{label}")]),t._v("HTTP资源的参数映射到git标签（提交ID，分支名称或标记）。如果git分支或标记名称包含斜杠（"),s("code",[t._v("/")]),t._v("），则应使用特殊字符串在HTTP URL中指定标签"),s("code",[t._v("(_)")]),t._v("（以避免与其他URL路径产生歧义）。例如，如果标签为"),s("code",[t._v("foo/bar")]),t._v("，则替换斜杠将产生以下标签："),s("code",[t._v("foo(_)bar")]),t._v("。特殊字符串的包含"),s("code",[t._v("(_)")]),t._v("也可以应用于"),s("code",[t._v("{application}")]),t._v("参数。如果您使用curl之类的命令行客户端，请注意URL中的括号-您应使用单引号（''）将其从外壳中移出。")]),t._v(" "),s("h5",{attrs:{id:"跳过ssl证书验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跳过ssl证书验证"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_skipping_ssl_certificate_validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("跳过SSL证书验证"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("可以通过将该"),s("code",[t._v("git.skipSslValidation")]),t._v("属性设置为"),s("code",[t._v("true")]),t._v("（默认值为"),s("code",[t._v("false")]),t._v("）来禁用配置服务器对Git服务器的SSL证书的验证。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//example.com/my/repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skipSslValidation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("h5",{attrs:{id:"设置http连接超时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置http连接超时"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_setting_http_connection_timeout",target:"_blank",rel:"noopener noreferrer"}},[t._v("设置HTTP连接超时"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以配置配置服务器将等待获取HTTP连接的时间（以秒为单位）。使用该"),s("code",[t._v("git.timeout")]),t._v("属性。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//example.com/my/repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("h5",{attrs:{id:"git-uri中的占位符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-uri中的占位符"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_placeholders_in_git_uri",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git URI中的占位符"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("春天的云配置Server支持的占位符一个Git仓库URL "),s("code",[t._v("{application}")]),t._v("和"),s("code",[t._v("{profile}")]),t._v("（和"),s("code",[t._v("{label}")]),t._v("如果你需要它，但请记住，标签作为一个git标签反正适用）。因此，您可以通过使用类似于以下内容的结构来支持“每个应用程序一个存储库”策略：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/myorg/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("您也可以使用类似的模式来支持“每个配置文件一个存储库”策略 "),s("code",[t._v("{profile}")]),t._v("。")]),t._v(" "),s("p",[t._v("此外，在"),s("code",[t._v("{application}")]),t._v("参数中使用特殊字符串“（_）” 可以启用对多个组织的支持，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("其中"),s("code",[t._v("{application}")]),t._v("被设置在请求时以下面的格式："),s("code",[t._v("organization(_)application")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"模式匹配和多个存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模式匹配和多个存储库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_pattern_matching_and_multiple_repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("模式匹配和多个存储库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config还通过在应用程序和配置文件名称上进行模式匹配来支持更复杂的需求。模式格式是用逗号分隔的"),s("code",[t._v("{application}/{profile}")]),t._v("带通配符名称列表（请注意，以通配符开头的模式可能需要加引号），如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/simple/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("special")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" special*/dev*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*special")]),t._v("*/dev*\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/special/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local*\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/configsvc/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n")])])]),s("p",[t._v("如果"),s("code",[t._v("{application}/{profile}")]),t._v("与任何模式都不匹配，则使用在下定义的默认URI "),s("code",[t._v("spring.cloud.config.server.git.uri")]),t._v("。在上面的示例中，对于“简单”存储库，模式为"),s("code",[t._v("simple/*")]),t._v("（它仅匹配"),s("code",[t._v("simple")]),t._v("在所有概要文件中命名的一个应用程序）。“本地”存储库匹配所有"),s("code",[t._v("local")]),t._v("以所有概要文件开头的应用程序名称（"),s("code",[t._v("/*")]),t._v("后缀会自动添加到没有概要文件匹配器的任何模式中）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("仅当要设置的唯一属性是URI时，才能使用“简单”示例中使用的“单线”快捷方式。如果您需要设置其他任何内容（凭证，模式等），则需要使用完整表格。")])])])]),t._v(" "),s("p",[t._v("的"),s("code",[t._v("pattern")]),t._v("在回购属性实际上是一个数组，所以可以使用一个YAML阵列（或"),s("code",[t._v("[0]")]),t._v("，"),s("code",[t._v("[1]")]),t._v("在属性文件等后缀）绑定到多个图案。如果要运行具有多个配置文件的应用程序，则可能需要这样做，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("development")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/development'")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/staging'")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/development/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("staging")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/qa'")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/production'")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/staging/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n")])])]),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Spring Cloud猜测包含不以结尾结尾的配置文件的模式"),s("code",[t._v("*")]),t._v("意味着您实际上要匹配以该模式开头的配置文件列表（因此"),s("code",[t._v("*/staging")]),t._v("是的快捷方式"),s("code",[t._v('["*/staging", "*/staging,*"]')]),t._v("，依此类推）。例如，这很普遍，例如，您需要在本地的“开发”配置文件中运行应用程序，而又需要在远程的“云”配置文件中运行应用程序。")])])])]),t._v(" "),s("p",[t._v("每个存储库还可以选择将配置文件存储在子目录中，用于搜索这些目录的模式可以指定为"),s("code",[t._v("searchPaths")]),t._v("。以下示例在顶层显示了一个配置文件：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("searchPaths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bar*\n")])])]),s("p",[t._v("在前面的示例中，服务器在顶层，"),s("code",[t._v("foo/")]),t._v("子目录以及名称以开头的任何子目录中搜索配置文件"),s("code",[t._v("bar")]),t._v("。")]),t._v(" "),s("p",[t._v("默认情况下，服务器在首次请求配置时克隆远程存储库。可以将服务器配置为在启动时克隆存储库，如以下顶级示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/common/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloneOnStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloneOnStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n")])])]),s("p",[t._v("在前面的示例中，服务器在接受任何请求之前会在启动时克隆team-a的config-repo。在请求从存储库进行配置之前，不会克隆所有其他存储库。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("设置要在Config Server启动时克隆的存储库可以帮助在Config Server启动时快速识别配置错误的配置源（例如无效的存储库URI）。如果"),s("code",[t._v("cloneOnStart")]),t._v("未启用配置源，则Config Server可能会以配置错误或无效的配置源成功启动，并且直到应用程序从该配置源请求配置时才检测到错误。")])])])]),t._v(" "),s("h5",{attrs:{id:"认证方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证方式"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_authentication",target:"_blank",rel:"noopener noreferrer"}},[t._v("认证方式"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要在远程存储库上使用HTTP基本认证，请分别添加"),s("code",[t._v("username")]),t._v("和"),s("code",[t._v("password")]),t._v("属性（不在URL中），如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" trolley\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" strongpassword\n")])])]),s("p",[t._v("如果您不使用HTTPS和用户凭据，则在将密钥存储在默认目录（"),s("code",[t._v("~/.ssh")]),t._v("）中且URI指向SSH位置（例如）时，SSH也应立即可用"),s("code",[t._v("git@github.com:configuration/cloud-configuration")]),t._v("。重要的是，"),s("code",[t._v("~/.ssh/known_hosts")]),t._v("文件中应包含Git服务器的条目，并采用"),s("code",[t._v("ssh-rsa")]),t._v("格式。"),s("code",[t._v("ecdsa-sha2-nistp256")]),t._v("不支持其他格式（例如）。为避免意外，您应该确保"),s("code",[t._v("known_hosts")]),t._v("Git服务器的文件中仅存在一个条目，并且该条目与您提供给配置服务器的URL匹配。如果在URL中使用主机名，则要在"),s("code",[t._v("known_hosts")]),t._v("文件中完全包含该主机名（而不是IP）。使用JGit访问存储库，因此您找到的任何文档都应该适用。可以在以下位置设置HTTPS代理设置"),s("code",[t._v("~/.git/config")]),t._v("或（与其他任何JVM进程相同）具有系统属性（"),s("code",[t._v("-Dhttps.proxyHost")]),t._v("和"),s("code",[t._v("-Dhttps.proxyPort")]),t._v("）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("如果您不知道"),s("code",[t._v("~/.git")]),t._v("目录在哪里，请使用"),s("code",[t._v("git config --global")]),t._v("来操纵设置（例如"),s("code",[t._v("git config --global http.sslVerify false")]),t._v("）。")])])])]),t._v(" "),s("h5",{attrs:{id:"使用aws-codecommit进行身份验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用aws-codecommit进行身份验证"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_authentication_with_aws_codecommit",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用AWS CodeCommit进行身份验证"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server还支持"),s("a",{attrs:{href:"https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS CodeCommit"),s("OutboundLink")],1),t._v("身份验证。从命令行使用Git时，AWS CodeCommit使用身份验证帮助程序。该帮助程序未与JGit库一起使用，因此，如果Git URI与AWS CodeCommit模式匹配，则会为AWS CodeCommit创建一个JGit CredentialProvider。AWS CodeCommit URI遵循以下模式：//git-codecommit.${AWS_REGION}.amazonaws.com/${repopath}。")]),t._v(" "),s("p",[t._v("如果您提供带有AWS CodeCommit URI的用户名和密码，则它们必须是提供对存储库访问权限的"),s("a",{attrs:{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSGettingStartedGuide/AWSCredentials.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS accessKeyId和secretAccessKey"),s("OutboundLink")],1),t._v("。如果您未指定用户名和密码，则使用"),s("a",{attrs:{href:"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS Default Credential Provider链"),s("OutboundLink")],1),t._v("检索accessKeyId和secretAccessKey 。")]),t._v(" "),s("p",[t._v("如果您的Git URI与CodeCommit URI模式（如前所示）匹配，则必须在用户名和密码或默认凭据提供商链支持的位置之一中提供有效的AWS凭据。AWS EC2实例可以将"),s("a",{attrs:{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IAM角色用于EC2实例"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("该"),s("code",[t._v("aws-java-sdk-core")]),t._v("罐是一个可选的依赖。如果"),s("code",[t._v("aws-java-sdk-core")]),t._v("jar不在您的类路径中，则无论git服务器URI如何，都不会创建AWS Code Commit凭证提供程序。")])])])]),t._v(" "),s("h5",{attrs:{id:"使用google-cloud-source进行身份验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用google-cloud-source进行身份验证"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_authentication_with_google_cloud_source",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用Google Cloud Source进行身份验证"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server还支持针对"),s("a",{attrs:{href:"https://cloud.google.com/source-repositories/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google Cloud Source"),s("OutboundLink")],1),t._v("存储库进行身份验证。")]),t._v(" "),s("p",[t._v("如果您的Git URI使用"),s("code",[t._v("http")]),t._v("或"),s("code",[t._v("https")]),t._v("协议，域名是"),s("code",[t._v("source.developers.google.com")]),t._v("，则将使用Google Cloud Source凭据提供程序。Google Cloud Source资源库URI的格式为"),s("code",[t._v("https://source.developers.google.com/p/${GCP_PROJECT}/r/${REPO}")]),t._v("。要获取您存储库的URI，请在Google Cloud Source UI中单击“克隆”，然后选择“手动生成的凭据”。不生成任何凭证，只需复制显示的URI。")]),t._v(" "),s("p",[t._v("Google Cloud Source凭据提供商将使用Google Cloud Platform应用程序默认凭据。有关如何为系统创建应用程序默认凭据的信息，请参阅"),s("a",{attrs:{href:"https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google Cloud SDK文档"),s("OutboundLink")],1),t._v("。这种方法适用于开发环境中的用户帐户和生产环境中的服务帐户。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("com.google.auth:google-auth-library-oauth2-http")]),t._v("是可选的依赖项。如果"),s("code",[t._v("google-auth-library-oauth2-http")]),t._v("jar不在您的类路径中，则无论git服务器URI如何，都不会创建Google Cloud Source凭据提供程序。")])])])]),t._v(" "),s("h5",{attrs:{id:"使用属性进行git-ssh配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用属性进行git-ssh配置"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_git_ssh_configuration_using_properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用属性进行Git SSH配置"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认情况下，当使用SSH URI连接到Git存储库时，Spring Cloud Config Server使用的JGit库使用SSH配置文件，例如"),s("code",[t._v("~/.ssh/known_hosts")]),t._v("和"),s("code",[t._v("/etc/ssh/ssh_config")]),t._v("。在Cloud Foundry之类的云环境中，本地文件系统可能是临时的，或者不容易访问。在这种情况下，可以使用Java属性设置SSH配置。为了激活基于属性的SSH配置，"),s("code",[t._v("spring.cloud.config.server.git.ignoreLocalSshSettings")]),t._v("必须将属性设置为"),s("code",[t._v("true")]),t._v("，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git@gitserver.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("team/repo1.git\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ignoreLocalSshSettings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" someHostKey\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostKeyAlgorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ssh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rsa\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privateKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n                         -----BEGIN RSA PRIVATE KEY-----\n                         MIIEpgIBAAKCAQEAx4UbaDzY5xjW6hc9jwN0mX33XpTDVW9WqHp5AKaRbtAC3DqX\n                         IXFMPgw3K45jxRb93f8tv9vL3rD9CUG1Gv4FM+o7ds7FRES5RTjv2RT/JVNJCoqF\n                         ol8+ngLqRZCyBtQN7zYByWMRirPGoDUqdPYrj2yq+ObBBNhg5N+hOwKjjpzdj2Ud\n                         1l7R+wxIqmJo1IYyy16xS8WsjyQuyC0lL456qkd5BDZ0Ag8j2X9H9D5220Ln7s9i\n                         oezTipXipS7p7Jekf3Ywx6abJwOmB0rX79dV4qiNcGgzATnG1PkXxqt76VhcGa0W\n                         DDVHEEYGbSQ6hIGSh0I7BQun0aLRZojfE3gqHQIDAQABAoIBAQCZmGrk8BK6tXCd\n                         fY6yTiKxFzwb38IQP0ojIUWNrq0+9Xt+NsypviLHkXfXXCKKU4zUHeIGVRq5MN9b\n                         BO56/RrcQHHOoJdUWuOV2qMqJvPUtC0CpGkD+valhfD75MxoXU7s3FK7yjxy3rsG\n                         EmfA6tHV8/4a5umo5TqSd2YTm5B19AhRqiuUVI1wTB41DjULUGiMYrnYrhzQlVvj\n                         5MjnKTlYu3V8PoYDfv1GmxPPh6vlpafXEeEYN8VB97e5x3DGHjZ5UrurAmTLTdO8\n                         +AahyoKsIY612TkkQthJlt7FJAwnCGMgY6podzzvzICLFmmTXYiZ/28I4BX/mOSe\n                         pZVnfRixAoGBAO6Uiwt40/PKs53mCEWngslSCsh9oGAaLTf/XdvMns5VmuyyAyKG\n                         ti8Ol5wqBMi4GIUzjbgUvSUt+IowIrG3f5tN85wpjQ1UGVcpTnl5Qo9xaS1PFScQ\n                         xrtWZ9eNj2TsIAMp/svJsyGG3OibxfnuAIpSXNQiJPwRlW3irzpGgVx/AoGBANYW\n                         dnhshUcEHMJi3aXwR12OTDnaLoanVGLwLnkqLSYUZA7ZegpKq90UAuBdcEfgdpyi\n                         PhKpeaeIiAaNnFo8m9aoTKr+7I6/uMTlwrVnfrsVTZv3orxjwQV20YIBCVRKD1uX\n                         VhE0ozPZxwwKSPAFocpyWpGHGreGF1AIYBE9UBtjAoGBAI8bfPgJpyFyMiGBjO6z\n                         FwlJc/xlFqDusrcHL7abW5qq0L4v3R+FrJw3ZYufzLTVcKfdj6GelwJJO+8wBm+R\n                         gTKYJItEhT48duLIfTDyIpHGVm9+I1MGhh5zKuCqIhxIYr9jHloBB7kRm0rPvYY4\n                         VAykcNgyDvtAVODP+4m6JvhjAoGBALbtTqErKN47V0+JJpapLnF0KxGrqeGIjIRV\n                         cYA6V4WYGr7NeIfesecfOC356PyhgPfpcVyEztwlvwTKb3RzIT1TZN8fH4YBr6Ee\n                         KTbTjefRFhVUjQqnucAvfGi29f+9oE3Ei9f7wA+H35ocF6JvTYUsHNMIO/3gZ38N\n                         CPjyCMa9AoGBAMhsITNe3QcbsXAbdUR00dDsIFVROzyFJ2m40i4KCRM35bC/BIBs\n                         q0TY3we+ERB40U8Z2BvU61QuwaunJ2+uGadHo58VSVdggqAo0BSkH58innKKt96J\n                         69pcVH/4rmLbXdcmNYGm6iu+MlPQk4BUZknHSmVHIFdJ0EPupVaQ8RHT\n                         -----END RSA PRIVATE KEY-----")]),t._v("\n")])])]),s("p",[t._v("下表描述了SSH配置属性。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("物业名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("ignoreLocalSshSettings")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果为"),s("code",[t._v("true")]),t._v("，请使用基于属性而不是基于文件的SSH配置。必须设置为"),s("code",[t._v("spring.cloud.config.server.git.ignoreLocalSshSettings")]),t._v("，"),s("strong",[t._v("而不是")]),t._v("在存储库定义中。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("私钥")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("有效的SSH私钥。如果"),s("code",[t._v("ignoreLocalSshSettings")]),t._v("为true并且Git URI为SSH格式，则必须设置。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("hostKey")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("有效的SSH主机密钥。如果"),s("code",[t._v("hostKeyAlgorithm")]),t._v("还设置，则必须设置。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("hostKeyAlgorithm")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("之一"),s("code",[t._v("ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521")]),t._v("。如果"),s("code",[t._v("hostKey")]),t._v("还设置，则必须设置。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strictHostKeyChecking")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("true")]),t._v("或"),s("code",[t._v("false")]),t._v("。如果为false，请忽略主机密钥错误。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("knownHostsFile")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("自定义"),s("code",[t._v(".known_hosts")]),t._v("文件的位置。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("preferredAuthentications")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("覆盖服务器身份验证方法顺序。如果服务器在此"),s("code",[t._v("publickey")]),t._v("方法之前具有键盘交互身份验证，则应该可以避免登录提示。")])])])]),t._v(" "),s("h5",{attrs:{id:"git搜索路径中的占位符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git搜索路径中的占位符"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_placeholders_in_git_search_paths",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git搜索路径中的占位符"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("春季云配置服务器也支持占位符的搜索路径"),s("code",[t._v("{application}")]),t._v("和"),s("code",[t._v("{profile}")]),t._v("（和"),s("code",[t._v("{label}")]),t._v("如果需要的话），如下面的例子：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("searchPaths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{application}'")]),t._v("\n")])])]),s("p",[t._v("上面的清单导致在存储库中搜索与目录（以及顶层）同名的文件。通配符在带有占位符的搜索路径中也有效（搜索中包括任何匹配的目录）。")]),t._v(" "),s("h5",{attrs:{id:"强制拉入git存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制拉入git存储库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_force_pull_in_git_repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("强制拉入Git存储库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如前所述，Spring Cloud Config Server会克隆远程git存储库，以防本地副本变脏（例如，操作系统进程更改了文件夹内容），从而使Spring Cloud Config Server无法从远程存储库更新本地副本。")]),t._v(" "),s("p",[t._v("为了解决这个问题，有一个"),s("code",[t._v("force-pull")]),t._v("属性可以使Spring Cloud Config Server在本地副本脏的情况下从远程存储库强制拉出，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("force-pull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("如果您具有多个存储库配置，则可"),s("code",[t._v("force-pull")]),t._v("以为每个存储库配置属性，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/common/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("force-pull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("force-pull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("force-pull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("team-c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("*\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//git/team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.git\n")])])]),s("table",[s("thead",[s("tr",[s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("force-pull")]),t._v("属性 的默认值为"),s("code",[t._v("false")]),t._v("。")])])])]),t._v(" "),s("h5",{attrs:{id:"删除git存储库中未跟踪的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除git存储库中未跟踪的分支"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_deleting_untracked_branches_in_git_repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除Git存储库中未跟踪的分支"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("由于Spring Cloud Config Server在将分支签出到本地存储库后（例如，通过标签获取属性）之后具有远程git存储库的克隆，因此它将永久保留该分支，直到下一个服务器重启（这将创建新的本地存储库）。因此，可能会删除远程分支，但仍可获取其本地副本。而且，如果Spring Cloud Config Server客户端服务以"),s("code",[t._v("--spring.cloud.config.label=deletedRemoteBranch,master")]),t._v(" 该服务开头，它将从"),s("code",[t._v("deletedRemoteBranch")]),t._v("本地分支获取属性，而不是从"),s("code",[t._v("master")]),t._v("。")]),t._v(" "),s("p",[t._v("为了使本地存储库分支保持整洁并保持远程状态- "),s("code",[t._v("deleteUntrackedBranches")]),t._v("可以设置属性。它将使Spring Cloud Config Server "),s("strong",[t._v("强制")]),t._v("从本地存储库中删除未跟踪的分支。例：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deleteUntrackedBranches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("deleteUntrackedBranches")]),t._v("属性 的默认值为"),s("code",[t._v("false")]),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h5",{attrs:{id:"git刷新率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git刷新率"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_git_refresh_rate",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git刷新率"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以使用来控制配置服务器多久从Git后端获取更新的配置数据"),s("code",[t._v("spring.cloud.config.server.git.refreshRate")]),t._v("。以秒为单位指定此属性的值。默认情况下，该值为0，这意味着配置服务器将在每次请求时从Git存储库中获取更新的配置。")]),t._v(" "),s("h4",{attrs:{id:"版本控制后端文件系统使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本控制后端文件系统使用"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_version_control_backend_filesystem_use",target:"_blank",rel:"noopener noreferrer"}},[t._v("版本控制后端文件系统使用"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("使用基于VCS的后端（git，svn），文件被检出或克隆到本地文件系统。默认情况下，它们以前缀放置在系统临时目录中"),s("code",[t._v("config-repo-")]),t._v("。例如，在linux上，它可能是"),s("code",[t._v("/tmp/config-repo-")]),t._v("。一些操作系统"),s("a",{attrs:{href:"https://serverfault.com/questions/377348/when-does-tmp-get-cleared/377349#377349",target:"_blank",rel:"noopener noreferrer"}},[t._v("通常会清除"),s("OutboundLink")],1),t._v("临时目录。这可能导致意外行为，例如缺少属性。为了避免这个问题，更改配置服务器使用设置的目录"),s("code",[t._v("spring.cloud.config.server.git.basedir")]),t._v("或"),s("code",[t._v("spring.cloud.config.server.svn.basedir")]),t._v("到不驻留在系统临时结构的目录。")])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"文件系统后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件系统后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_file_system_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("文件系统后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Server中还有一个“本机”配置文件，该配置文件不使用Git，而是从本地类路径或文件系统（您要使用指向的任何静态URL）加载配置文件"),s("code",[t._v("spring.cloud.config.server.native.searchLocations")]),t._v("。要使用本机配置文件，请使用启动启动配置服务器"),s("code",[t._v("spring.profiles.active=native")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("切记"),s("code",[t._v("file:")]),t._v("对文件资源使用前缀（默认情况下，没有前缀的通常是类路径）。与任何Spring Boot配置一样，您可以嵌入"),s("code",[t._v("${}")]),t._v("-style环境占位符，但请记住Windows中的绝对路径需要额外的"),s("code",[t._v("/")]),t._v("（例如"),s("code",[t._v("file:///${user.home}/config-repo")]),t._v("）。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("的默认值"),s("code",[t._v("searchLocations")]),t._v("与本地Spring Boot应用程序（即"),s("code",[t._v("[classpath:/, classpath:/config, file:./, file:./config]")]),t._v("）相同。这不会"),s("code",[t._v("application.properties")]),t._v("从服务器向所有客户端公开，因为服务器中存在的所有属性源在发送给客户端之前都会被删除。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("文件系统后端非常适合快速入门和测试。要在生产环境中使用它，您需要确保文件系统可靠并且可以在Config Server的所有实例之间共享。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("搜索位置可以包含占位符"),s("code",[t._v("{application}")]),t._v("，"),s("code",[t._v("{profile}")]),t._v("和"),s("code",[t._v("{label}")]),t._v("。这样，您可以隔离路径中的目录并选择一种对您有意义的策略（例如，每个应用程序的子目录或每个配置文件的子目录）。")]),t._v(" "),s("p",[t._v("如果您在搜索位置中不使用占位符，则此存储库还将"),s("code",[t._v("{label}")]),t._v("HTTP资源的参数附加到搜索路径上的后缀，因此将从每个搜索位置"),s("strong",[t._v("和")]),t._v("与标签同名的子目录（标记的属性在Spring环境中优先）。因此，没有占位符的默认行为与添加以结尾的搜索位置相同"),s("code",[t._v("/{label}/")]),t._v("。例如，"),s("code",[t._v("file:/tmp/config")]),t._v("与相同"),s("code",[t._v("file:/tmp/config,file:/tmp/config/{label}")]),t._v("。可以通过设置禁用此行为"),s("code",[t._v("spring.cloud.config.server.native.addLabelLocations=false")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"保管库后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保管库后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#vault-backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("保管库后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server还支持将"),s("a",{attrs:{href:"https://www.vaultproject.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vault"),s("OutboundLink")],1),t._v("作为后端。")]),t._v(" "),s("p",[t._v("保险柜是用于安全访问机密的工具。秘密是您要严格控制访问权限的任何内容，例如API密钥，密码，证书和其他敏感信息。保管箱提供了对任何机密的统一界面，同时提供了严格的访问控制并记录了详细的审核日志。")]),t._v(" "),s("p",[t._v("有关Vault的更多信息，请参见"),s("a",{attrs:{href:"https://learn.hashicorp.com/vault/?track=getting-started#getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vault快速入门指南"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("要使配置服务器能够使用Vault后端，您可以使用"),s("code",[t._v("vault")]),t._v("配置文件运行配置服务器。例如，在您的配置服务器中"),s("code",[t._v("application.properties")]),t._v("，您可以添加"),s("code",[t._v("spring.profiles.active=vault")]),t._v("。")]),t._v(" "),s("p",[t._v("默认情况下，配置服务器假定您的Vault服务器运行在"),s("code",[t._v("http://127.0.0.1:8200")]),t._v("。它还假定backend的名称为"),s("code",[t._v("secret")]),t._v("，密钥为"),s("code",[t._v("application")]),t._v("。所有这些默认值都可以在配置服务器的中配置"),s("code",[t._v("application.properties")]),t._v("。下表描述了可配置的保管库属性：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Default Value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("host")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("127.0.0.1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("port")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("8200")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("scheme")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("http")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("backend")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("secret")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("defaultKey")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("application")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("profileSeparator")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v(",")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("kvVersion")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("skipSslValidation")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("namespace")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("null")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("上表中的所有属性必须"),s("code",[t._v("spring.cloud.config.server.vault")]),t._v("在复合配置的正确Vault部分中添加前缀或放置在其中。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("所有可配置的属性都可以在中找到"),s("code",[t._v("org.springframework.cloud.config.server.environment.VaultEnvironmentProperties")]),t._v("。")]),t._v(" "),s("p",[t._v("Vault 0.10.0引入了版本化的键值后端（k / v后端版本2），该后端公开了与早期版本不同的API，它现在需要"),s("code",[t._v("data/")]),t._v("在安装路径和实际上下文路径之间添加一个，并将秘密包装在一个"),s("code",[t._v("data")]),t._v("对象中。设置"),s("code",[t._v("kvVersion=2")]),t._v("将考虑到这一点。")]),t._v(" "),s("p",[t._v("（可选）支持Vault Enterprise "),s("code",[t._v("X-Vault-Namespace")]),t._v("标头。要将其发送到保管库，请设置"),s("code",[t._v("namespace")]),t._v("属性。")]),t._v(" "),s("p",[t._v("在配置服务器运行的情况下，您可以向服务器发出HTTP请求以从Vault后端检索值。为此，您需要Vault服务器的令牌。")]),t._v(" "),s("p",[t._v("首先，将一些数据放入Vault中，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ vault kv put secret/application "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bar "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("baz")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bam\n$ vault kv put secret/myapp "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myappsbar\n")])])]),s("p",[t._v("其次，向配置服务器发出HTTP请求以检索值，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ curl -X "GET" "http://localhost:8888/myapp/default" -H "X-Config-Token: yourtoken"\n')])])]),s("p",[t._v("您应该看到类似于以下内容的响应：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myapp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"profiles"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"state"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"propertySources"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vault:myapp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myappsbar"')]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vault:application"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"baz"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bam"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("客户端提供必要的身份验证以使Config Server与Vault对话的默认方式是设置X-Config-Token标头。但是，您可以通过设置与Spring Cloud Vault相同的配置属性来省略标题并在服务器中配置身份验证。要设置的属性为"),s("code",[t._v("spring.cloud.config.server.vault.authentication")]),t._v("。应该将其设置为支持的身份验证方法之一。您可能还需要设置特定于您使用的身份验证方法的其他属性，方法是使用与记录的属性名称相同的属性名称，"),s("code",[t._v("spring.cloud.vault")]),t._v("但使用"),s("code",[t._v("spring.cloud.config.server.vault")]),t._v("前缀。有关更多详细信息，请参阅《"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-vault/reference/html/#vault.config.authentication",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Vault参考指南》"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("如果省略X-Config-Token标头并使用服务器属性来设置身份验证，则Config Server应用程序需要对Spring Vault具有附加的依赖关系才能启用附加的身份验证选项。有关如何添加该依赖关系的信息，请参见《"),s("a",{attrs:{href:"https://docs.spring.io/spring-vault/docs/current/reference/html/#dependencies",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Vault参考指南》"),s("OutboundLink")],1),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h5",{attrs:{id:"多个属性来源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个属性来源"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_multiple_properties_sources",target:"_blank",rel:"noopener noreferrer"}},[t._v("多个属性来源"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用Vault时，可以为您的应用程序提供多个属性源。例如，假设您已将数据写入Vault中的以下路径：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("secret/myApp,dev\nsecret/myApp\nsecret/application,dev\nsecret/application\n")])])]),s("p",[s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_vault_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用Config Server"),s("OutboundLink")],1),t._v("写入的属性"),s("code",[t._v("secret/application")]),t._v("可用于"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_vault_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("所有应用程序"),s("OutboundLink")],1),t._v("。随着名称的应用程序，"),s("code",[t._v("myApp")]),t._v("，必须写入任何属性"),s("code",[t._v("secret/myApp")]),t._v("，并"),s("code",[t._v("secret/application")]),t._v("提供给它。当"),s("code",[t._v("myApp")]),t._v("有"),s("code",[t._v("dev")]),t._v("启用配置文件，写入到上述所有路径的性能将提供给它，在列表中的优先级比其他的第一路径属性。")]),t._v(" "),s("h4",{attrs:{id:"通过代理访问后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过代理访问后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_accessing_backends_through_a_proxy",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过代理访问后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("配置服务器可以通过HTTP或HTTPS代理访问Git或保管库后端。通过"),s("code",[t._v("proxy.http")]),t._v("和下的设置可以控制Git或Vault的此行为"),s("code",[t._v("proxy.https")]),t._v("。这些设置是针对每个存储库的，因此，如果您使用"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#composite-environment-repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("组合环境存储库"),s("OutboundLink")],1),t._v("，则必须分别为组合中的每个后端配置代理设置。如果使用的网络需要HTTP和HTTPS URL分别使用代理服务器，则可以为单个后端配置HTTP和HTTPS代理设置。")]),t._v(" "),s("p",[t._v("下表描述了HTTP和HTTPS代理的代理配置属性。所有这些属性都必须以"),s("code",[t._v("proxy.http")]),t._v("或作为前缀"),s("code",[t._v("proxy.https")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("物业名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("主办")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("代理的主机。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("港口")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于访问代理的端口。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("nonProxyHosts")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("配置服务器应在代理外部访问的所有主机。如果同时为"),s("code",[t._v("proxy.http.nonProxyHosts")]),t._v("和提供值，则将使用"),s("code",[t._v("proxy.https.nonProxyHosts")]),t._v("该"),s("code",[t._v("proxy.http")]),t._v("值。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("用户名")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用来验证代理的用户名。如果同时为"),s("code",[t._v("proxy.http.username")]),t._v("和提供值，则将使用"),s("code",[t._v("proxy.https.username")]),t._v("该"),s("code",[t._v("proxy.http")]),t._v("值。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("密码")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用来验证代理的密码。如果同时为"),s("code",[t._v("proxy.http.password")]),t._v("和提供值，则将使用"),s("code",[t._v("proxy.https.password")]),t._v("该"),s("code",[t._v("proxy.http")]),t._v("值。")])])])]),t._v(" "),s("p",[t._v("以下配置使用HTTPS代理访问Git存储库。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("samples/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("https")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("proxy.host.io\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myproxypassword\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3128'")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myproxyusername\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nonProxyHosts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example.com\n")])])]),s("h4",{attrs:{id:"与所有应用程序共享配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与所有应用程序共享配置"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_sharing_configuration_with_all_applications",target:"_blank",rel:"noopener noreferrer"}},[t._v("与所有应用程序共享配置"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("所有应用程序之间的共享配置根据您采用的方法而异，如以下主题所述：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-server-file-based-repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于文件的存储库"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-server-vault-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("保管箱服务器"),s("OutboundLink")],1)])]),t._v(" "),s("h5",{attrs:{id:"基于文件的存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于文件的存储库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-server-file-based-repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于文件的存储库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("基于文件（GIT，SVN和本地）仓库，并在文件名的资源"),s("code",[t._v("application*")]),t._v("（"),s("code",[t._v("application.properties")]),t._v("，"),s("code",[t._v("application.yml")]),t._v("，"),s("code",[t._v("application-*.properties")]),t._v("，等）的所有客户端应用程序之间共享。您可以使用具有这些文件名的资源来配置全局默认值，并在必要时使它们被应用程序特定的文件覆盖。")]),t._v(" "),s("p",[t._v("该"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#property-overrides",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性覆盖"),s("OutboundLink")],1),t._v("功能也可用于设置全局默认值，使用占位符的应用允许在本地覆盖它们。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("使用“本机”配置文件（本地文件系统后端），您应该使用不属于服务器自身配置的显式搜索位置。否则，"),s("code",[t._v("application*")]),t._v("默认搜索位置中的资源将被删除，因为它们是服务器的一部分。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h5",{attrs:{id:"保管箱服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保管箱服务器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-server-vault-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("保管箱服务器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用Vault作为后端时，可以通过将配置放在中来与所有应用程序共享配置"),s("code",[t._v("secret/application")]),t._v("。例如，如果您运行以下Vault命令，则使用配置服务器的所有应用程序都将具有属性"),s("code",[t._v("foo")]),t._v("并"),s("code",[t._v("baz")]),t._v("可供其使用：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ vault "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" secret/application "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bar "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("baz")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bam\n")])])]),s("h4",{attrs:{id:"jdbc后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_jdbc_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("JDBC后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server支持JDBC（关系数据库）作为配置属性的后端。您可以通过添加"),s("code",[t._v("spring-jdbc")]),t._v("到类路径并使用"),s("code",[t._v("jdbc")]),t._v("配置文件或通过添加类型的Bean 来启用此功能"),s("code",[t._v("JdbcEnvironmentRepository")]),t._v("。如果您在类路径上包含正确的依赖项（有关更多详细信息，请参见用户指南），Spring Boot会配置数据源。")]),t._v(" "),s("p",[t._v("数据库需要有一个表"),s("code",[t._v("PROPERTIES")]),t._v("，该表包含名为"),s("code",[t._v("APPLICATION")]),t._v("，"),s("code",[t._v("PROFILE")]),t._v("和"),s("code",[t._v("LABEL")]),t._v("（具有通常的"),s("code",[t._v("Environment")]),t._v("含义）的列，加上"),s("code",[t._v("KEY")]),t._v("和"),s("code",[t._v("VALUE")]),t._v("表示键和值对的"),s("code",[t._v("Properties")]),t._v("样式。在Java中，所有字段的类型均为String，因此您可以根据"),s("code",[t._v("VARCHAR")]),t._v("需要设置它们的长度。属性值的行为方式与它们来自名为的Spring Boot属性文件的行为相同"),s("code",[t._v("{application}-{profile}.properties")]),t._v("，包括所有加密和解密，这将作为后处理步骤应用（即，不直接在存储库实现中使用）。")]),t._v(" "),s("h4",{attrs:{id:"redis后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_redis_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server支持Redis作为配置属性的后端。您可以通过向"),s("a",{attrs:{href:"https://spring.io/projects/spring-data-redis",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Data Redis"),s("OutboundLink")],1),t._v("添加依赖项来启用此功能。")]),t._v(" "),s("p",[t._v("pom.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("以下配置使用Spring Data "),s("code",[t._v("RedisTemplate")]),t._v("访问Redis。我们可以使用"),s("code",[t._v("spring.redis.*")]),t._v("属性来覆盖默认的连接设置。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16379")]),t._v("\n")])])]),s("p",[t._v("这些属性应作为字段存储在哈希中。哈希的名称应该是相同的"),s("code",[t._v("spring.application.name")]),t._v("财产或共同"),s("code",[t._v("spring.application.name")]),t._v("及"),s("code",[t._v("spring.profiles.active[n]")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("HMSET sample-app server.port "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8100"')]),t._v(" sample.topic.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(" test.property1 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"property1"')]),t._v("\n")])])]),s("p",[t._v("执行上面可见的命令后，哈希应包含带有值的以下键：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HGETALL示例应用程序\n{\n  “ server.port”：“ 8100”，\n  “ sample.topic.name”：“测试”，\n  “ test.property1”：“ property1”\n}\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("未指定配置文件时"),s("code",[t._v("default")]),t._v("将使用。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h4",{attrs:{id:"aws-s3后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aws-s3后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_aws_s3_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS S3后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server支持将AWS S3作为配置属性的后端。您可以通过向"),s("a",{attrs:{href:"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/examples-s3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon S3"),s("OutboundLink")],1),t._v("的"),s("a",{attrs:{href:"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/examples-s3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS Java SDK"),s("OutboundLink")],1),t._v("添加依赖项来启用此功能。")]),t._v(" "),s("p",[t._v("pom.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.amazonaws"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("aws-java-sdk-s3"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("以下配置使用AWS S3客户端访问配置文件。我们可以使用"),s("code",[t._v("spring.awss3.*")]),t._v("属性来选择存储您的配置的存储桶。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" awss3\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("awss3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("region")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" us"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("east"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bucket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bucket1\n")])])]),s("p",[t._v("还可以使用指定一个AWS URL来"),s("a",{attrs:{href:"https://aws.amazon.com/blogs/developer/using-new-regions-and-endpoints/",target:"_blank",rel:"noopener noreferrer"}},[t._v("覆盖"),s("OutboundLink")],1),t._v(" S3服务"),s("a",{attrs:{href:"https://aws.amazon.com/blogs/developer/using-new-regions-and-endpoints/",target:"_blank",rel:"noopener noreferrer"}},[t._v("的标准端点"),s("OutboundLink")],1),s("code",[t._v("spring.awss3.endpoint")]),t._v("。这允许支持S3的beta区域以及其他与S3兼容的存储API。")]),t._v(" "),s("p",[t._v("可使用"),s("a",{attrs:{href:"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认AWS Credential Provider Chain"),s("OutboundLink")],1),t._v("找到"),s("a",{attrs:{href:"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("证书"),s("OutboundLink")],1),t._v("。支持版本化和加密的存储桶，无需进一步配置。")]),t._v(" "),s("p",[t._v("配置文件存储在你的水桶为"),s("code",[t._v("{application}-{profile}.properties")]),t._v("，"),s("code",[t._v("{application}-{profile}.yml")]),t._v("或"),s("code",[t._v("{application}-{profile}.json")]),t._v("。可以提供一个可选标签来指定文件的目录路径。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("未指定配置文件时"),s("code",[t._v("default")]),t._v("将使用。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h4",{attrs:{id:"credhub后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#credhub后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_credhub_backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("CredHub后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Cloud Config Server支持"),s("a",{attrs:{href:"https://docs.cloudfoundry.org/credhub",target:"_blank",rel:"noopener noreferrer"}},[t._v("CredHub"),s("OutboundLink")],1),t._v("作为配置属性的后端。您可以通过向"),s("a",{attrs:{href:"https://spring.io/projects/spring-credhub",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring CredHub"),s("OutboundLink")],1),t._v("添加依赖项来启用此功能。")]),t._v(" "),s("p",[t._v("pom.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.credhub"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-credhub-starter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("以下配置使用双向TLS访问CredHub：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" credhub\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("credhub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//credhub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8844")]),t._v("\n")])])]),s("p",[t._v("属性应存储为JSON，例如：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("credhub "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" --name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo-app/default/master/toggles"')]),t._v(" --type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("json\nvalue: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toggle.button"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toggle.link"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ncredhub "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" --name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/demo-app/default/master/abs"')]),t._v(" --type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("json\nvalue: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"marketing.enabled"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"external.enabled"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("具有该名称的所有客户端应用程序"),s("code",[t._v("spring.cloud.config.name=demo-app")]),t._v("将具有以下属性：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n    toggle.button：“蓝色”，\n    toggle.link：“红色”，\n    marketing.enabled：是的，\n    external.enabled：false\n}\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("当未指定配置文件"),s("code",[t._v("default")]),t._v("时，"),s("code",[t._v("master")]),t._v("将使用默认值，当未指定标签时，将使用默认值。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h5",{attrs:{id:"oauth-2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oauth-2-0"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_oauth_2_0",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAuth 2.0"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以使用"),s("a",{attrs:{href:"https://docs.cloudfoundry.org/concepts/architecture/uaa.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UAA"),s("OutboundLink")],1),t._v("作为提供程序通过"),s("a",{attrs:{href:"https://oauth.net/2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAuth 2.0"),s("OutboundLink")],1),t._v("进行身份验证。")]),t._v(" "),s("p",[t._v("pom.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.security"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-security-config"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.security"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-security-oauth2-client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("以下配置使用OAuth 2.0和UAA访问CredHub：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" credhub\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("credhub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//credhub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8844")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("oauth2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registration-id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" credhub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("client\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("security")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("oauth2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("credhub-client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" uaa\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client-id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" credhub_config_server\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client-secret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" asecret\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("authorization-grant-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" client_credentials\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uaa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token-uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//uaa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8443/oauth/token\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("使用的UAA客户ID应该具有"),s("code",[t._v("credhub.read")]),t._v("范围。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h4",{attrs:{id:"复合环境存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合环境存储库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#composite-environment-repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("复合环境存储库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些情况下，您可能希望从多个环境存储库中提取配置数据。为此，您可以"),s("code",[t._v("composite")]),t._v("在配置服务器的应用程序属性或YAML文件中启用配置文件。例如，如果要从Subversion存储库以及两个Git存储库中提取配置数据，则可以为配置服务器设置以下属性：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" composite\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("composite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" svn\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///path/to/svn/repo\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///path/to/rex/git/repo\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///path/to/walter/git/repo\n")])])]),s("p",[t._v("使用此配置，优先级由"),s("code",[t._v("composite")]),t._v("密钥下列出存储库的顺序确定。在上面的示例中，首先列出了Subversion存储库，因此在Subversion存储库中找到的值将覆盖在其中一个Git存储库中为相同属性找到的值。在"),s("code",[t._v("rex")]),t._v("Git存储库中找到的值将在Git存储库中为相同属性找到的值之前使用"),s("code",[t._v("walter")]),t._v("。")]),t._v(" "),s("p",[t._v("如果只想从每种不同类型的存储库中提取配置数据，则可以"),s("code",[t._v("composite")]),t._v("在配置服务器的应用程序属性或YAML文件中启用相应的配置文件，而不是配置文件。例如，如果要从单个Git存储库和单个HashiCorp Vault服务器提取配置数据，则可以为配置服务器设置以下属性：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vault\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///path/to/git/repo\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("vault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8200")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("使用此配置，可以通过"),s("code",[t._v("order")]),t._v("属性确定优先级。您可以使用该"),s("code",[t._v("order")]),t._v("属性为所有存储库指定优先级顺序。"),s("code",[t._v("order")]),t._v("属性的数值越低，其优先级越高。存储库的优先级顺序有助于解决包含相同属性值的存储库之间的任何潜在冲突。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("如果您的复合环境包括上一个示例中的Vault服务器，则必须在对配置服务器的每个请求中都包含Vault令牌。请参阅"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#vault-backend",target:"_blank",rel:"noopener noreferrer"}},[t._v("保管库后端"),s("OutboundLink")],1),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("从环境存储库中检索值时，任何类型的故障都会导致整个组合环境的故障。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("使用复合环境时，所有存储库都包含相同的标签很重要。如果您的环境与前面的示例中的环境类似，并且您请求带有"),s("code",[t._v("master")]),t._v("标签的配置数据，但是Subversion存储库不包含名为的分支"),s("code",[t._v("master")]),t._v("，则整个请求将失败。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h5",{attrs:{id:"定制复合环境存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定制复合环境存储库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_custom_composite_environment_repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("定制复合环境存储库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("除了使用Spring Cloud中的一个环境存储库之外，您还可以提供自己的"),s("code",[t._v("EnvironmentRepository")]),t._v("bean，以将其包含在复合环境中。为此，您的bean必须实现"),s("code",[t._v("EnvironmentRepository")]),t._v("接口。如果要"),s("code",[t._v("EnvironmentRepository")]),t._v("在复合环境中控制自定义的优先级，则还应该实现该"),s("code",[t._v("Ordered")]),t._v("接口并重写该"),s("code",[t._v("getOrdered")]),t._v("方法。如果您不实现该"),s("code",[t._v("Ordered")]),t._v("接口，则您"),s("code",[t._v("EnvironmentRepository")]),t._v("的优先级最低。")]),t._v(" "),s("h4",{attrs:{id:"物业替代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#物业替代"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#property-overrides",target:"_blank",rel:"noopener noreferrer"}},[t._v("物业替代"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Server具有“替代”功能，使操作员可以为所有应用程序提供配置属性。应用程序使用常规的Spring Boot钩子不会意外更改重写的属性。要声明覆盖，请将名称/值对的映射添加到"),s("code",[t._v("spring.cloud.config.server.overrides")]),t._v("，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("overrides")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bar\n")])])]),s("p",[t._v("前面的示例使所有作为配置客户端的应用程序读取"),s("code",[t._v("foo=bar")]),t._v("，而与它们自己的配置无关。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("配置系统不能强制应用程序以任何特定方式使用配置数据。因此，覆盖无法执行。但是，它们确实为Spring Cloud Config客户端提供了有用的默认行为。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("通常，"),s("code",[t._v("${}")]),t._v("可以使用反斜杠（"),s("code",[t._v("\\")]),t._v("）对"),s("code",[t._v("$")]),t._v("或进行转义，以将Spring环境的占位符转义（并在客户端上解析）"),s("code",[t._v("{")]),t._v("。例如，"),s("code",[t._v("\\${app.foo:bar}")]),t._v("解析为"),s("code",[t._v("bar")]),t._v("，除非应用提供自己的"),s("code",[t._v("app.foo")]),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("在YAML中，您不需要转义反斜杠本身。但是，在属性文件中，在服务器上配置替代时，确实需要转义反斜杠。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("您可以通过设置"),s("code",[t._v("spring.cloud.config.overrideNone=true")]),t._v("远程存储库中的标志（默认为false），使客户端中所有替代的优先级更像默认值，让应用程序在环境变量或系统属性中提供自己的值。")]),t._v(" "),s("h3",{attrs:{id:"健康指标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#健康指标"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_health_indicator",target:"_blank",rel:"noopener noreferrer"}},[t._v("健康指标"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Server带有运行状况指示器，用于检查配置的"),s("code",[t._v("EnvironmentRepository")]),t._v("是否正常。默认情况下，它会要求"),s("code",[t._v("EnvironmentRepository")]),t._v("提供一个名为"),s("code",[t._v("app")]),t._v("，"),s("code",[t._v("default")]),t._v("配置文件和"),s("code",[t._v("EnvironmentRepository")]),t._v("实现提供的默认标签的应用程序。")]),t._v(" "),s("p",[t._v("您可以配置运行状况指示器以检查更多应用程序以及自定义配置文件和自定义标签，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("health")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repositories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("myservice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("label")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mylabel\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("myservice-dev")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myservice\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" development\n")])])]),s("p",[t._v("您可以通过设置禁用运行状况指示器"),s("code",[t._v("spring.cloud.config.server.health.enabled=false")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_security",target:"_blank",rel:"noopener noreferrer"}},[t._v("安全"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以使用对您有意义的任何方式来保护Config Server（从物理网络安全性到OAuth2承载令牌），因为Spring Security和Spring Boot提供了对许多安全性安排的支持。")]),t._v(" "),s("p",[t._v("要使用默认的Spring Boot配置的HTTP Basic安全性，请在类路径中包含Spring Security（例如，通过"),s("code",[t._v("spring-boot-starter-security")]),t._v("）。默认值为用户名"),s("code",[t._v("user")]),t._v("和随机生成的密码。随机密码在实践中没有用，因此我们建议您配置密码（通过设置"),s("code",[t._v("spring.security.user.password")]),t._v("）并对其进行加密（有关如何操作的说明，请参见下文）。")]),t._v(" "),s("h3",{attrs:{id:"加密与解密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加密与解密"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_encryption_and_decryption",target:"_blank",rel:"noopener noreferrer"}},[t._v("加密与解密"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("要使用加密和解密功能，您需要在JVM中安装完整功能的JCE（默认情况下不包括）。您可以从Oracle下载“ Java密码学扩展（JCE）无限强度管辖权策略文件”并按照安装说明进行操作（实际上，您需要用下载的JRE lib / security目录替换这两个策略文件）。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("如果远程属性源包含加密的内容（以开头的值"),s("code",[t._v("{cipher}")]),t._v("），则将其解密，然后再通过HTTP发送给客户端。此设置的主要优点是，当属性值处于“静止”状态时（例如，在git存储库中），不需要使用纯文本格式。如果无法解密某个值，则将其从属性源中删除，并使用相同的键但以前缀"),s("code",[t._v("invalid")]),t._v("和表示“不适用”（通常为``）的值添加其他属性。这很大程度上是为了防止将密文用作密码并意外泄漏。")]),t._v(" "),s("p",[t._v("如果为配置客户端应用程序设置远程配置存储库，则它可能包含"),s("code",[t._v("application.yml")]),t._v("与以下内容类似的内容：")]),t._v(" "),s("p",[t._v("application.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dbuser\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ'")]),t._v("\n")])])]),s("p",[t._v(".properties文件中的加密值不能用引号引起来。否则，该值不会解密。以下示例显示了有效的值：")]),t._v(" "),s("p",[t._v("application.properties")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.datasource.username：dbuser\nspring.datasource.password：{cipher} FKSAJDFGYOS8F7GLHAKERGFHLSAJ\n")])])]),s("p",[t._v("您可以安全地将此纯文本推送到共享的git存储库，并且秘密密码仍然受到保护。")]),t._v(" "),s("p",[t._v("服务器还公开"),s("code",[t._v("/encrypt")]),t._v("和"),s("code",[t._v("/decrypt")]),t._v("终结点（假设它们是安全的，并且只能由授权代理访问）。如果您编辑远程配置文件，则可以使用Config Server通过POST到"),s("code",[t._v("/encrypt")]),t._v("端点来加密值，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ curl本地主机：8888 / encrypt -d mysecret\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("如果您加密的值中包含需要URL编码的字符，则应使用该"),s("code",[t._v("--data-urlencode")]),t._v("选项来"),s("code",[t._v("curl")]),t._v("确保其编码正确。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("确保不要在加密值中包含任何curl命令统计信息。将值输出到文件可以帮助避免此问题。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("反向操作也可以通过以下方式获得"),s("code",[t._v("/decrypt")]),t._v("（如果服务器配置有对称密钥或完整密钥对），如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ curl本地主机：8888 / decrypt -d 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n我的秘密\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("如果您使用curl进行测试，则使用"),s("code",[t._v("--data-urlencode")]),t._v("（而不是"),s("code",[t._v("-d")]),t._v("）或设置显式值"),s("code",[t._v("Content-Type: text/plain")]),t._v("，以确保在有特殊字符时，curl可以正确编码数据（'+'特别棘手）。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("在将加密的值"),s("code",[t._v("{cipher}")]),t._v("放入YAML或属性文件中之前，在提交并将其推送到远程（可能不安全）存储之前，请获取加密的值并添加前缀。")]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("/encrypt")]),t._v("和"),s("code",[t._v("/decrypt")]),t._v("终点还兼有接受的形式路径"),s("code",[t._v("/*/{application}/{profiles}")]),t._v("，当客户打电话到主环境资源，这可以用来控制加密的每个应用程序（名称）和每个配置文件的基础。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("要以这种精细的方式控制加密，还必须提供一种"),s("code",[t._v("@Bean")]),t._v("类型"),s("code",[t._v("TextEncryptorLocator")]),t._v("，该类型针对每个名称和配置文件创建不同的加密器。默认情况下不提供（所有加密使用相同的密钥）。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("spring")]),t._v("命令行客户机（安装弹簧云CLI扩展）也可以用于加密和解密，因为显示在下面的例子：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ spring加密mysecret --key foo\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n$ spring解密--key foo 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n我的秘密\n")])])]),s("p",[t._v("要使用文件中的密钥（例如用于加密的RSA公钥），请在密钥值前添加“ @”并提供文件路径，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ spring加密mysecret --key @ $ {HOME} /。ssh / id_rsa.pub\nAQAjPgt3eFZQXwt8tsHAVv / QHiY5sI2dRcR + ...\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("该"),s("code",[t._v("--key")]),t._v("参数是强制性的（尽管有"),s("code",[t._v("--")]),t._v("前缀）。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h3",{attrs:{id:"密钥管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#密钥管理"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_key_management",target:"_blank",rel:"noopener noreferrer"}},[t._v("密钥管理"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Server可以使用对称（共享）密钥或非对称密钥（RSA密钥对）。非对称选择在安全性方面是优越的，但是使用对称密钥通常更方便，因为它是在中配置的单个属性值"),s("code",[t._v("bootstrap.properties")]),t._v("。")]),t._v(" "),s("p",[t._v("要配置对称密钥，您需要将其设置"),s("code",[t._v("encrypt.key")]),t._v("为秘密字符串（或使用"),s("code",[t._v("ENCRYPT_KEY")]),t._v("环境变量将其保留在纯文本配置文件之外）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("您不能使用来配置非对称密钥"),s("code",[t._v("encrypt.key")]),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("要配置非对称密钥，请使用密钥库（例如，由"),s("code",[t._v("keytool")]),t._v("JDK附带的实用程序创建的密钥库）。密钥存储属性是"),s("code",[t._v("encrypt.keyStore.*")]),t._v("与"),s("code",[t._v("*")]),t._v("等于")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("encrypt.keyStore.location")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("包含"),s("code",[t._v("Resource")]),t._v("位置")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("encrypt.keyStore.password")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("持有用于解锁密钥库的密码")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("encrypt.keyStore.alias")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("标识商店中要使用的密钥")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("encrypt.keyStore.type")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("要创建的KeyStore的类型。默认为"),s("code",[t._v("jks")]),t._v("。")])])])]),t._v(" "),s("p",[t._v("加密是使用公钥完成的，解密需要私钥。因此，原则上，如果您只想加密（并准备使用私钥在本地解密值），则只能在服务器中配置公钥。实际上，您可能不希望在本地进行解密，因为它会将密钥管理过程分布在所有客户端上，而不是将其集中在服务器上。另一方面，如果您的配置服务器相对不安全并且只有少数客户端需要加密的属性，那么它可能是一个有用的选项。")]),t._v(" "),s("h3",{attrs:{id:"创建密钥库进行测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建密钥库进行测试"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_creating_a_key_store_for_testing",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建密钥库进行测试"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要创建用于测试的密钥库，可以使用类似于以下内容的命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ keytool -genkeypair -alias mytestkey -keyalg RSA \\\n  -dname“ CN = Web服务器，OU =单位，O =组织，L =城市，S =州，C =美国” \\\n  -keypass changeme -keystore server.jks -storepass letmein\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("使用JDK 11或更高版本时，使用上述命令时可能会收到以下警告。在这种情况下，您可能要确保"),s("code",[t._v("keypass")]),t._v("和"),s("code",[t._v("storepass")]),t._v("值匹配。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("警告：PKCS12 KeyStore不支持不同的存储和密钥密码。忽略用户指定的-keypass值。\n")])])]),s("p",[t._v("将"),s("code",[t._v("server.jks")]),t._v("文件放入类路径（例如），然后在"),s("code",[t._v("bootstrap.yml")]),t._v("Config Server的中，创建以下设置：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("encrypt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keyStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/server.jks\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" letmein\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alias")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mytestkey\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" changeme\n")])])]),s("h3",{attrs:{id:"使用多个按键和按键旋转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用多个按键和按键旋转"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_using_multiple_keys_and_key_rotation",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用多个按键和按键旋转"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("除了"),s("code",[t._v("{cipher}")]),t._v("加密属性值中的前缀之外，Config Server "),s("code",[t._v("{name:value}")]),t._v("在（Base64编码的）密文开始之前查找零个或多个前缀。密钥被传递给a "),s("code",[t._v("TextEncryptorLocator")]),t._v("，后者可以执行"),s("code",[t._v("TextEncryptor")]),t._v("为密码找到a 所需的任何逻辑。如果配置了密钥库（"),s("code",[t._v("encrypt.keystore.location")]),t._v("），则默认定位器将查找具有"),s("code",[t._v("key")]),t._v("前缀提供的别名的密钥，该密钥的密码文本类似于以下内容：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" `"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cipher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("testkey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("`\n")])])]),s("p",[t._v("定位器查找名为“ testkey”的键。也可以通过使用"),s("code",[t._v("{secret:…}")]),t._v("前缀中的值来提供机密。但是，如果未提供，则默认为使用密钥库密码（这是在构建密钥库且未指定密钥时得到的密码）。如果确实提供了机密，则还应该使用custom加密机密"),s("code",[t._v("SecretLocator")]),t._v("。")]),t._v(" "),s("p",[t._v("当密钥仅用于加密几个字节的配置数据时（也就是说，它们未在其他地方使用），从密码的角度讲，几乎不需要旋转密钥。但是，您有时可能需要更改密钥（例如，在发生安全漏洞时）。在这种情况下，所有客户端都需要更改其源配置文件（例如，在git中），并"),s("code",[t._v("{key:…}")]),t._v("在所有密码中使用新的前缀。请注意，客户端需要首先检查Config Server密钥库中的密钥别名是否可用。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("如果要让Config Server处理所有加密以及解密，"),s("code",[t._v("{name:value}")]),t._v("则还可以将前缀作为纯文本添加到发布到"),s("code",[t._v("/encrypt")]),t._v("端点。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h3",{attrs:{id:"提供加密的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提供加密的属性"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_serving_encrypted_properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("提供加密的属性"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("有时，您希望客户端在本地解密配置，而不是在服务器中进行解密。在这种情况下，如果提供了"),s("code",[t._v("encrypt.*")]),t._v("用于定位密钥的配置，则仍然可以具有"),s("code",[t._v("/encrypt")]),t._v("和"),s("code",[t._v("/decrypt")]),t._v("端点，但是需要通过放置"),s("code",[t._v("spring.cloud.config.server.encrypt.enabled=false")]),t._v("在中来显式关闭对传出属性的解密"),s("code",[t._v("bootstrap.[yml|properties]")]),t._v("。如果您不关心端点，则在不配置键或启用标志的情况下都可以使用。")]),t._v(" "),s("h2",{attrs:{id:"服务替代格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务替代格式"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_serving_alternative_formats",target:"_blank",rel:"noopener noreferrer"}},[t._v("服务替代格式"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("来自环境端点的默认JSON格式非常适合Spring应用程序使用，因为它直接映射到"),s("code",[t._v("Environment")]),t._v("抽象上。如果愿意，可以通过在资源路径中添加后缀（“ .yml”，“。yaml”或“ .properties”）来使用与YAML或Java属性相同的数据。对于不关心JSON终结点的结构或它们提供的额外元数据的应用程序来说，这可能很有用（例如，不使用Spring的应用程序可能会受益于此方法的简单性）。")]),t._v(" "),s("p",[t._v("YAML和属性表示形式还有一个附加标志（提供为称为的布尔查询参数"),s("code",[t._v("resolvePlaceholders")]),t._v("），以信号表示"),s("code",[t._v("${…}")]),t._v("应尽可能在呈现之前在输出中解析源文档（以标准Spring 形式）中的占位符。对于不了解Spring占位符约定的使用者来说，这是一个有用的功能。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("使用YAML或属性格式存在一些限制，主要是与元数据的丢失有关。例如，JSON被构造为属性源的有序列表，其名称与该源相关。即使值的来源有多个来源，YAML和属性表单也会合并到一个映射中，并且原始来源文件的名称也会丢失。同样，YAML表示也不一定是后备存储库中YAML源的忠实表示。它由一系列平面属性来源构成，并且必须对密钥的形式进行假设。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h2",{attrs:{id:"提供纯文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提供纯文本"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_serving_plain_text",target:"_blank",rel:"noopener noreferrer"}},[t._v("提供纯文本"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("Environment")]),t._v("您的应用程序可能需要使用针对其环境量身定制的通用纯文本配置文件，而不是使用抽象（或使用YAML或属性格式的抽象表示之一）。在配置服务器通过额外的端点提供了这些"),s("code",[t._v("/{application}/{profile}/{label}/{path}")]),t._v("，在那里"),s("code",[t._v("application")]),t._v("，"),s("code",[t._v("profile")]),t._v("和"),s("code",[t._v("label")]),t._v("的含义与常规环境终点相同，但是"),s("code",[t._v("path")]),t._v("是一个文件名（如路径"),s("code",[t._v("log.xml")]),t._v("）。该端点的源文件与环境端点的定位方式相同。属性和YAML文件使用相同的搜索路径。但是，不是汇总所有匹配资源，而是仅返回第一个要匹配的资源。")]),t._v(" "),s("p",[t._v("找到资源后"),s("code",[t._v("${…}")]),t._v("，使用"),s("code",[t._v("Environment")]),t._v("提供的应用程序名称，配置文件和标签的有效名称来解析常规格式（）的占位符。通过这种方式，资源端点与环境端点紧密集成在一起。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("与用于环境配置的源文件一样，"),s("code",[t._v("profile")]),t._v("用来解析文件名。因此，如果您想要一个特定于配置文件的文件，"),s("code",[t._v("/*/development/*/logback.xml")]),t._v("可以通过一个名为"),s("code",[t._v("logback-development.xml")]),t._v("（优先于"),s("code",[t._v("logback.xml")]),t._v("）的文件来解决。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("如果您不想提供，而是"),s("code",[t._v("label")]),t._v("让服务器使用默认标签，则可以提供一个"),s("code",[t._v("useDefaultLabel")]),t._v("请求参数。因此，"),s("code",[t._v("default")]),t._v("配置文件的前面的示例可以是"),s("code",[t._v("/sample/default/nginx.conf?useDefaultLabel")]),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("目前，Spring Cloud Config可以为git，SVN，本机后端和AWS S3提供纯文本。对git，SVN和本机后端的支持是相同的。AWS S3的工作方式略有不同。以下各节说明每个部分的工作方式：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-serving-plain-text-git-svn-native-backends",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git，SVN和本机后端"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-serving-plain-text-aws-s3",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS S3"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"git，svn和本机后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git，svn和本机后端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-serving-plain-text-git-svn-native-backends",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git，SVN和本机后端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("考虑以下用于GIT或SVN存储库或本机后端的示例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("application.yml\nnginx.conf\n")])])]),s("p",[t._v("将"),s("code",[t._v("nginx.conf")]),t._v("可能类似于下面的清单：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server {\n    listen              80;\n    server_name         ${nginx.server.name};\n}\n")])])]),s("p",[s("code",[t._v("application.yml")]),t._v(" 可能类似于以下清单：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example.com\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" development\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" develop.com\n")])])]),s("p",[t._v("该"),s("code",[t._v("/sample/default/master/nginx.conf")]),t._v("资源可能如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server {\n    listen              80;\n    server_name         example.com;\n}\n")])])]),s("p",[s("code",[t._v("/sample/development/master/nginx.conf")]),t._v(" 可能如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server {\n    listen              80;\n    server_name         develop.com;\n}\n")])])]),s("h3",{attrs:{id:"aws-s3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aws-s3"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#spring-cloud-config-serving-plain-text-aws-s3",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS S3"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要为AWS s3启用纯文本服务，Config Server应用程序需要包括对Spring Cloud AWS的依赖关系。有关如何设置该依赖关系的详细信息，请参阅《 "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-aws/2.1.3.RELEASE/single/spring-cloud-aws.html#_spring_cloud_aws_maven_dependency_management",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud AWS Reference Guide》"),s("OutboundLink")],1),t._v("。然后，您需要按照《"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-aws/2.1.3.RELEASE/single/spring-cloud-aws.html#_configuring_credentials",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud AWS参考指南》"),s("OutboundLink")],1),t._v("中的说明配置Spring Cloud AWS 。")]),t._v(" "),s("h3",{attrs:{id:"解密纯文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解密纯文本"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_decrypting_plain_text",target:"_blank",rel:"noopener noreferrer"}},[t._v("解密纯文本"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认情况下，纯文本文件中的加密值不会被解密。为了启用对纯文本文件的解密"),s("code",[t._v("spring.cloud.config.server.encrypt.enabled=true")]),t._v("，请"),s("code",[t._v("spring.cloud.config.server.encrypt.plainTextEncrypt=true")]),t._v("在"),s("code",[t._v("bootstrap.[yml|properties]")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("仅YAML，JSON和属性文件扩展名支持解密纯文本文件。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("如果启用了此功能，并且请求了不受支持的文件扩展名，则文件中的任何加密值都不会被解密。")]),t._v(" "),s("h2",{attrs:{id:"嵌入配置服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌入配置服务器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_embedding_the_config_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("嵌入配置服务器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Server最好作为独立应用程序运行。但是，如果需要，可以将其嵌入另一个应用程序。为此，请使用"),s("code",[t._v("@EnableConfigServer")]),t._v("注释。"),s("code",[t._v("spring.cloud.config.server.bootstrap")]),t._v("在这种情况下，名为的可选属性会很有用。它是一个标志，用于指示服务器是否应从其自己的远程存储库中进行配置。默认情况下，该标志为关闭状态，因为它会延迟启动。但是，当嵌入到另一个应用程序中时，以与其他任何应用程序相同的方式进行初始化是有意义的。设置为时"),s("code",[t._v("spring.cloud.config.server.bootstrap")]),t._v("，"),s("code",[t._v("true")]),t._v("还必须使用"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#composite-environment-repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("复合环境存储库配置"),s("OutboundLink")],1),t._v("。例如")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configserver\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" composite\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("composite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" native\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("search-locations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HOME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Desktop/config\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootstrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("如果使用bootstrap标志，则配置服务器需要在中配置其名称和存储库URI "),s("code",[t._v("bootstrap.yml")]),t._v("。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("要更改服务器端点的位置，您可以（可选）设置"),s("code",[t._v("spring.cloud.config.server.prefix")]),t._v("（例如"),s("code",[t._v("/config")]),t._v("）以在前缀下提供资源。前缀应以开头，但不能以结束"),s("code",[t._v("/")]),t._v("。它应用于"),s("code",[t._v("@RequestMappings")]),t._v("Config Server中的（即，在Spring Boot "),s("code",[t._v("server.servletPath")]),t._v("和"),s("code",[t._v("server.contextPath")]),t._v("前缀之下）。")]),t._v(" "),s("p",[t._v("如果要直接从后端存储库（而不是从配置服务器）读取应用程序的配置，则基本上需要没有端点的嵌入式配置服务器。您可以不使用"),s("code",[t._v("@EnableConfigServer")]),t._v("批注（set "),s("code",[t._v("spring.cloud.config.server.bootstrap=true")]),t._v("）来完全关闭端点。")]),t._v(" "),s("h2",{attrs:{id:"推送通知和spring-cloud-bus"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推送通知和spring-cloud-bus"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_push_notifications_and_spring_cloud_bus",target:"_blank",rel:"noopener noreferrer"}},[t._v("推送通知和Spring Cloud Bus"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("许多源代码存储库提供程序（例如Github，Gitlab，Gitea，Gitee，Gogs或Bitbucket）都通过Webhook通知您存储库中的更改。您可以通过提供者的用户界面将Webhook配置为URL和您感兴趣的一组事件。例如，"),s("a",{attrs:{href:"https://developer.github.com/v3/activity/events/types/#pushevent",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),s("OutboundLink")],1),t._v("使用POST到Webhook，其JSON主体包含提交列表和"),s("code",[t._v("X-Github-Event")]),t._v("设置为的标头（）"),s("code",[t._v("push")]),t._v("。如果您在"),s("code",[t._v("spring-cloud-config-monitor")]),t._v("库上添加依赖项并在Config Server中激活Spring Cloud Bus，那么将"),s("code",[t._v("/monitor")]),t._v("启用端点。")]),t._v(" "),s("p",[t._v("When the webhook is activated, the Config Server sends a "),s("code",[t._v("RefreshRemoteApplicationEvent")]),t._v(" targeted at the applications it thinks might have changed. The change detection can be strategized. However, by default, it looks for changes in files that match the application name (for example, "),s("code",[t._v("foo.properties")]),t._v(" is targeted at the "),s("code",[t._v("foo")]),t._v(" application, while "),s("code",[t._v("application.properties")]),t._v(" is targeted at all applications). The strategy to use when you want to override the behavior is "),s("code",[t._v("PropertyPathNotificationExtractor")]),t._v(", which accepts the request headers and body as parameters and returns a list of file paths that changed.")]),t._v(" "),s("p",[t._v("默认配置可与Github，Gitlab，Gitea，Gitee，Gogs或Bitbucket一起使用。除了来自Github，Gitlab，Gitee或Bitbucket的JSON通知之外，您还可以通过POST来触发更改通知，该通知"),s("code",[t._v("/monitor")]),t._v("采用形式的形式编码的主体参数"),s("code",[t._v("path={application}")]),t._v("。这样做会向与该"),s("code",[t._v("{application}")]),t._v("模式匹配的应用程序广播（可以包含通配符）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("在"),s("code",[t._v("RefreshRemoteApplicationEvent")]),t._v("仅在发送"),s("code",[t._v("spring-cloud-bus")]),t._v("时在两个配置服务器和客户端应用程序激活。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("默认配置还检测本地git存储库中的文件系统更改。在这种情况下，不使用Webhook。但是，一旦您编辑配置文件，就会广播刷新。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h2",{attrs:{id:"spring-cloud-config客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-config客户端"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_spring_cloud_config_client",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Config客户端"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Spring Boot应用程序可以立即利用Spring Config Server（或应用程序开发人员提供的其他外部属性源）。它还选择了一些与"),s("code",[t._v("Environment")]),t._v("变更事件相关的其他有用功能。")]),t._v(" "),s("h3",{attrs:{id:"配置第一个引导程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置第一个引导程序"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#config-first-bootstrap",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置第一个引导程序"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在类路径上具有Spring Cloud Config Client的任何应用程序的默认行为如下：当配置客户端启动时，它将绑定到Config Server（通过"),s("code",[t._v("spring.cloud.config.uri")]),t._v("bootstrap配置属性），并"),s("code",[t._v("Environment")]),t._v("使用远程属性源初始化Spring 。")]),t._v(" "),s("p",[t._v("此行为的最终结果是，所有要使用Config Server的客户端应用程序都需要一个"),s("code",[t._v("bootstrap.yml")]),t._v("（或环境变量），其服务器地址设置为该地址"),s("code",[t._v("spring.cloud.config.uri")]),t._v("（默认为“ http：// localhost：8888”）。")]),t._v(" "),s("h3",{attrs:{id:"发现第一引导"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发现第一引导"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#discovery-first-bootstrap",target:"_blank",rel:"noopener noreferrer"}},[t._v("发现第一引导"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果您使用"),s("code",[t._v("DiscoveryClient")]),t._v("诸如Spring Cloud Netflix和Eureka Service Discovery或Spring Cloud Consul之类的实现，则可以让Config Server在Discovery Service中注册。但是，在默认的“配置优先”模式下，客户端无法利用注册。")]),t._v(" "),s("p",[t._v("如果您更喜欢使用"),s("code",[t._v("DiscoveryClient")]),t._v("来定位Config Server，则可以通过设置来实现"),s("code",[t._v("spring.cloud.config.discovery.enabled=true")]),t._v("（默认值为"),s("code",[t._v("false")]),t._v("）。这样做的最终结果是，所有客户端应用程序都需要"),s("code",[t._v("bootstrap.yml")]),t._v("具有适当发现配置的（或环境变量）。例如，对于Spring Cloud Netflix，您需要定义Eureka服务器地址（例如，在中"),s("code",[t._v("eureka.client.serviceUrl.defaultZone")]),t._v("）。使用此选项的价格是启动时需要进行额外的网络往返，以查找服务注册。好处是，只要发现服务是固定点，配置服务器就可以更改其坐标。默认服务ID是"),s("code",[t._v("configserver")]),t._v("，但是您可以通过设置"),s("code",[t._v("spring.cloud.config.discovery.serviceId")]),t._v("（和在服务器上，以一种通常的服务方式，例如通过设置"),s("code",[t._v("spring.application.name")]),t._v("）在客户端上更改该ID 。")]),t._v(" "),s("p",[t._v("发现客户端实现均支持某种元数据映射（例如，"),s("code",[t._v("eureka.instance.metadataMap")]),t._v("对于Eureka ，我们拥有）。Config Server的某些其他属性可能需要在其服务注册元数据中进行配置，以便客户端可以正确连接。如果Config Server受HTTP Basic保护，则可以将凭据配置为"),s("code",[t._v("user")]),t._v("和"),s("code",[t._v("password")]),t._v("。另外，如果Config Server具有上下文路径，则可以设置"),s("code",[t._v("configPath")]),t._v("。例如，以下YAML文件适用于作为Eureka客户端的Config Server：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eureka")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadataMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" osufhalskjrtl\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lviuhlszvaorhvlo5847\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /config\n")])])]),s("h3",{attrs:{id:"快速配置客户端失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速配置客户端失败"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#config-client-fail-fast",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速配置客户端失败"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些情况下，如果服务无法连接到Config Server，您可能希望启动失败。如果这是期望的行为，请设置引导程序配置属性，"),s("code",[t._v("spring.cloud.config.fail-fast=true")]),t._v("以使客户端因Exception而暂停。")]),t._v(" "),s("h3",{attrs:{id:"配置客户端重试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置客户端重试"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#config-client-retry",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置客户端重试"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果您希望配置服务器在您的应用程序启动时偶尔会不可用，则可以使其在失败后继续尝试。首先，您需要设置"),s("code",[t._v("spring.cloud.config.fail-fast=true")]),t._v("。然后，您需要添加"),s("code",[t._v("spring-retry")]),t._v("和"),s("code",[t._v("spring-boot-starter-aop")]),t._v("到您的类路径。默认行为是重试六次，初始回退间隔为1000ms，随后的回退的指数乘数为1.1。您可以通过设置"),s("code",[t._v("spring.cloud.config.retry.*")]),t._v("配置属性来配置这些属性（和其他属性）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("要完全控制重试行为，请添加ID为"),s("code",[t._v("@Bean")]),t._v("的type 。Spring Retry有一个支持创建一个。 "),s("code",[t._v("RetryOperationsInterceptor``configServerRetryInterceptor``RetryInterceptorBuilder")])])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("h3",{attrs:{id:"查找远程配置资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找远程配置资源"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_locating_remote_configuration_resources",target:"_blank",rel:"noopener noreferrer"}},[t._v("查找远程配置资源"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Service提供来自的属性源"),s("code",[t._v("/{application}/{profile}/{label}")]),t._v("，其中客户端应用程序中的默认绑定如下：")]),t._v(" "),s("ul",[s("li",[t._v('"name" = '),s("code",[t._v("${spring.application.name}")])]),t._v(" "),s("li",[t._v('"profile" = '),s("code",[t._v("${spring.profiles.active}")]),t._v(" (actually "),s("code",[t._v("Environment.getActiveProfiles()")]),t._v(")")]),t._v(" "),s("li",[t._v('"label" = "master"')])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("设置属性时，"),s("code",[t._v("${spring.application.name}")]),t._v("请勿在您的应用名称前加上保留字，"),s("code",[t._v("application-")]),t._v("以防止解析正确的属性源时出现问题。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("p",[t._v("您可以通过设置覆盖所有的人"),s("code",[t._v("spring.cloud.config.*")]),t._v("（这里"),s("code",[t._v("*")]),t._v("是"),s("code",[t._v("name")]),t._v("，"),s("code",[t._v("profile")]),t._v("或"),s("code",[t._v("label")]),t._v("）。该"),s("code",[t._v("label")]),t._v("是回滚到配置的先前版本很有用。使用默认的Config Server实现，它可以是git标签，分支名称或提交ID。标签也可以以逗号分隔的列表形式提供。在这种情况下，列表中的项目将一一尝试直到成功为止。在要素分支上工作时，此行为可能很有用。例如，您可能希望使config标签与分支对齐，但使其成为可选（在这种情况下，请使用"),s("code",[t._v("spring.cloud.config.label=myfeature,develop")]),t._v("）。")]),t._v(" "),s("h3",{attrs:{id:"为配置服务器指定多个url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为配置服务器指定多个url"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_specifying_multiple_urls_for_the_config_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("为配置服务器指定多个URL"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("为确保在部署了Config Server的多个实例并希望不时有一个或多个实例不可用时的高可用性，可以指定多个URL（作为“"),s("code",[t._v("spring.cloud.config.uri")]),t._v("属性），或让您的所有实例都在服务注册中心（例如Eureka）中注册（如果使用Discovery-First Bootstrap模式）。请注意，只有在未运行Config Server时（即，应用程序退出时）或发生连接超时时，这样做才能确保高可用性。例如，如果Config Server返回500（内部服务器错误）响应，或者Config Client从Config Server收到401（由于凭据错误或其他原因），则Config Client不会尝试从其他URL获取属性。此类错误表示用户问题，而不是可用性问题。")]),t._v(" "),s("p",[t._v("如果您在Config Server上使用HTTP基本安全性，则仅当将凭据嵌入在"),s("code",[t._v("spring.cloud.config.uri")]),t._v("属性下指定的每个URL中时，当前才可能支持per-Config Server身份验证凭据。如果使用任何其他类型的安全性机制，则（当前）不能支持每台配置服务器的身份验证和授权。")]),t._v(" "),s("h3",{attrs:{id:"配置超时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置超时"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_configuring_timeouts",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置超时"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果要配置超时阈值：")]),t._v(" "),s("ul",[s("li",[t._v("可以使用属性配置读取超时"),s("code",[t._v("spring.cloud.config.request-read-timeout")]),t._v("。")]),t._v(" "),s("li",[t._v("可以使用属性配置连接超时"),s("code",[t._v("spring.cloud.config.request-connect-timeout")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"安全-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全-2"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_security_2",target:"_blank",rel:"noopener noreferrer"}},[t._v("安全"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果在服务器上使用HTTP基本安全性，则客户端需要知道密码（如果不是默认用户名，则需要用户名）。您可以通过配置服务器URI或通过单独的用户名和密码属性来指定用户名和密码，如以下示例所示：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("secret@myconfig.mycompany.com\n")])])]),s("p",[t._v("以下示例显示了传递相同信息的另一种方法：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//myconfig.mycompany.com\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n")])])]),s("p",[t._v("在"),s("code",[t._v("spring.cloud.config.password")]),t._v("与"),s("code",[t._v("spring.cloud.config.username")]),t._v("那就是在URI提供的值覆盖任何东西。")]),t._v(" "),s("p",[t._v("如果您在Cloud Foundry上部署应用程序，则提供密码的最佳方法是通过服务凭据（例如URI中的URI），因为它不需要位于配置文件中。以下示例在本地运行，并且适用于Cloud Foundry上名为的用户提供的服务"),s("code",[t._v("configserver")]),t._v("：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vcap.services.configserver.credentials.uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("password@localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果您使用安全的另一种形式，你可能需要"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#custom-rest-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("提供"),s("code",[t._v("RestTemplate")]),s("OutboundLink")],1),t._v("的"),s("code",[t._v("ConfigServicePropertySourceLocator")]),t._v("（例如，通过在引导方面抓住它，并注入它）。")]),t._v(" "),s("h4",{attrs:{id:"健康指标-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#健康指标-2"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_health_indicator_2",target:"_blank",rel:"noopener noreferrer"}},[t._v("健康指标"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Config Client提供一个Spring Boot Health Indicator，该指示器尝试从Config Server加载配置。可以通过设置禁用健康指示器"),s("code",[t._v("health.config.enabled=false")]),t._v("。由于性能原因，响应也被缓存。默认的生存时间为5分钟。要更改该值，请设置"),s("code",[t._v("health.config.time-to-live")]),t._v("属性（以毫秒为单位）。")]),t._v(" "),s("h4",{attrs:{id:"提供自定义的resttemplate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提供自定义的resttemplate"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#custom-rest-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("提供自定义的RestTemplate"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些情况下，您可能需要自定义来自客户端对配置服务器的请求。通常，这样做涉及传递特殊的"),s("code",[t._v("Authorization")]),t._v("标头以验证对服务器的请求。提供一个习惯"),s("code",[t._v("RestTemplate")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("创建一个具有的实现的新配置bean "),s("code",[t._v("PropertySourceLocator")]),t._v("，如以下示例所示：")])]),t._v(" "),s("p",[t._v("CustomConfigServiceBootstrapConfiguration.java")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomConfigServiceBootstrapConfiguration")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigServicePropertySourceLocator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("configServicePropertySourceLocator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigClientProperties")]),t._v(" clientProperties "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("configClientProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigServicePropertySourceLocator")]),t._v(" configServicePropertySourceLocator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigServicePropertySourceLocator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        configServicePropertySourceLocator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRestTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("customRestTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" configServicePropertySourceLocator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("为了简化添加"),s("code",[t._v("Authorization")]),t._v("标题的方法，"),s("code",[t._v("spring.cloud.config.headers.*")]),t._v("可以使用属性。")])])]),t._v(" "),s("tbody",[s("tr",[s("td")])])]),t._v(" "),s("ol",[s("li",[t._v("在中"),s("code",[t._v("resources/META-INF")]),t._v("，创建一个名为的文件 "),s("code",[t._v("spring.factories")]),t._v("并指定您的自定义配置，如以下示例所示：")])]),t._v(" "),s("p",[t._v("弹簧工厂")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("org.springframework.cloud.bootstrap.BootstrapConfiguration")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("com.my.config.client.CustomConfigServiceBootstrapConfiguration")]),t._v("\n")])])]),s("h4",{attrs:{id:"金库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#金库"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_vault",target:"_blank",rel:"noopener noreferrer"}},[t._v("金库"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("将保管库用作配置服务器的后端时，客户端需要为服务器提供令牌以从保管库检索值。该令牌可以在客户端内设置被提供"),s("code",[t._v("spring.cloud.config.token")]),t._v(" 在"),s("code",[t._v("bootstrap.yml")]),t._v("，如显示在下面的例子：")]),t._v(" "),s("p",[t._v("bootstrap.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YourVaultToken\n")])])]),s("h3",{attrs:{id:"保险柜中的嵌套键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保险柜中的嵌套键"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.2.1.RELEASE/reference/html/#_nested_keys_in_vault",target:"_blank",rel:"noopener noreferrer"}},[t._v("保险柜中的嵌套键"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("保险柜支持将键嵌套在保险柜中存储的值中的功能，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('echo -n \'{"appA": {"secret": "appAsecret"}, "bar": "baz"}\' | vault write secret/myapp -\n')])])]),s("p",[t._v("此命令将JSON对象写入您的保险柜。要在Spring中访问这些值，您将使用传统的dot（"),s("code",[t._v(".")]),t._v("）批注，如以下示例所示")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${appA.secret}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("前面的代码会将"),s("code",[t._v("name")]),t._v("变量的值设置为"),s("code",[t._v("appAsecret")]),t._v("。")])])}),[],!1,null,null,null);a.default=n.exports}}]);