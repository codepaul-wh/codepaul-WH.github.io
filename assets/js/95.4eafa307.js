(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{379:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-cloud-task参考指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-task参考指南"}},[t._v("#")]),t._v(" Spring Cloud Task参考指南")]),t._v(" "),s("h1",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("本节简要概述了Spring Cloud Task参考文档。可以将其视为文档其余部分的地图。您可以线性阅读本参考指南，或者如果您不感兴趣，可以跳过本节。")]),t._v(" "),s("h2",{attrs:{id:"_1-关于文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-关于文档"}},[t._v("#")]),t._v(" 1.关于文档")]),t._v(" "),s("p",[t._v("Spring Cloud Task参考指南提供"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/%7Bversion%7D/reference/html",target:"_blank",rel:"noopener noreferrer"}},[t._v("html"),s("OutboundLink")],1),t._v("， "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/%7Bversion%7D/reference/pdf/spring-cloud-task-reference.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("pdf"),s("OutboundLink")],1),t._v(" 和"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/%7Bversion%7D/reference/epub/spring-cloud-task-reference.epub",target:"_blank",rel:"noopener noreferrer"}},[t._v("epub"),s("OutboundLink")],1),t._v("格式。最新副本位于"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/current-SNAPSHOT/reference/html/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs.spring.io/spring-cloud-task/docs/current-SNAPSHOT/reference/html/"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("本文档的副本可以供您自己使用，也可以分发给其他人，但前提是您不对此类副本收取任何费用，并且还应确保每份副本均包含本版权声明，无论是印刷版本还是电子版本。")]),t._v(" "),s("h2",{attrs:{id:"_2-获得帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-获得帮助"}},[t._v("#")]),t._v(" 2.获得帮助")]),t._v(" "),s("p",[t._v("Spring Cloud Task遇到问题了吗？我们希望为您提供帮助！")]),t._v(" "),s("ul",[s("li",[t._v("问一个问题。我们监视"),s("a",{attrs:{href:"https://stackoverflow.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("stackoverflow.com"),s("OutboundLink")],1),t._v("上是否有标记为的问题"),s("a",{attrs:{href:"https://stackoverflow.com/tags/spring-cloud-task",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("spring-cloud-task")]),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("在"),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/spring-cloud/spring-cloud-task/issues上"),s("OutboundLink")],1),t._v("报告Spring Cloud Task的 "),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("错误"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("所有Spring Cloud Task都是开源的，包括文档。如果您发现文档有问题，或者只想改进文档，请"),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与其中"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_3-第一步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-第一步"}},[t._v("#")]),t._v(" 3.第一步")]),t._v(" "),s("p",[t._v("如果您只是刚开始使用Spring Cloud Task或一般使用“ Spring”，我们建议阅读“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("入门”"),s("OutboundLink")],1),t._v("一章。")]),t._v(" "),s("p",[t._v("要从头开始，请阅读以下部分：*“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started-introducing-spring-cloud-task",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Task简介"),s("OutboundLink")],1),t._v(" ” *“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started-system-requirements",target:"_blank",rel:"noopener noreferrer"}},[t._v("系统要求"),s("OutboundLink")],1),t._v(" ”要遵循该教程，请阅读“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started-developing-first-task",target:"_blank",rel:"noopener noreferrer"}},[t._v("开发第一个Spring Cloud Task应用程序"),s("OutboundLink")],1),t._v(" ”以运行示例，请阅读“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started-running-the-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("运行示例"),s("OutboundLink")],1),t._v(" ”")]),t._v(" "),s("h1",{attrs:{id:"入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#入门"}},[t._v("#")]),t._v(" 入门")]),t._v(" "),s("p",[t._v("如果您刚刚开始使用Spring Cloud Task，则应阅读本节。在这里，我们回答基本的“什么？”，“如何？”和“为什么？”问题。我们从对Spring Cloud Task的简要介绍开始。然后，我们构建一个Spring Cloud Task应用程序，并讨论一些核心原理。")]),t._v(" "),s("h2",{attrs:{id:"_4-介绍spring-cloud-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-介绍spring-cloud-task"}},[t._v("#")]),t._v(" 4.介绍Spring Cloud Task")]),t._v(" "),s("p",[t._v("Spring Cloud Task使创建短暂的微服务变得容易。它提供的功能可以让短期JVM进程在生产环境中按需执行。")]),t._v(" "),s("h2",{attrs:{id:"_5-系统要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-系统要求"}},[t._v("#")]),t._v(" 5.系统要求")]),t._v(" "),s("p",[t._v("您需要安装Java（Java 8或更高版本）。要进行构建，您还需要安装Maven。")]),t._v(" "),s("h3",{attrs:{id:"_5-1。数据库要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1。数据库要求"}},[t._v("#")]),t._v(" 5.1。数据库要求")]),t._v(" "),s("p",[t._v("Spring Cloud Task使用关系数据库来存储已执行任务的结果。尽管您可以在没有数据库的情况下开始开发任务（任务状态记录为任务存储库更新的一部分），但对于生产环境，您希望使用受支持的数据库。Spring Cloud Task当前支持以下数据库：")]),t._v(" "),s("ul",[s("li",[t._v("DB2")]),t._v(" "),s("li",[t._v("H2")]),t._v(" "),s("li",[t._v("数据库")]),t._v(" "),s("li",[t._v("MySQL的")]),t._v(" "),s("li",[t._v("甲骨文")]),t._v(" "),s("li",[t._v("Postgres")]),t._v(" "),s("li",[t._v("SQL服务器")])]),t._v(" "),s("h2",{attrs:{id:"_6-开发您的第一个spring-cloud-task应用程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-开发您的第一个spring-cloud-task应用程序"}},[t._v("#")]),t._v(" 6.开发您的第一个Spring Cloud Task应用程序")]),t._v(" "),s("p",[t._v("一个不错的起点是使用一个简单的“ Hello，World！”应用程序，因此我们创建了等效于突出显示框架功能的Spring Cloud Task。大多数IDE对Apache Maven都有很好的支持，因此我们将其用作该项目的构建工具。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("spring.io网站包含许多使用Spring Boot的"),s("a",{attrs:{href:"https://spring.io/guides",target:"_blank",rel:"noopener noreferrer"}},[t._v("“ "),s("code",[t._v("Getting Started")]),t._v("”指南"),s("OutboundLink")],1),t._v("。如果您需要解决特定的问题，请首先检查。您可以转到"),s("a",{attrs:{href:"https://start.spring.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Initializr"),s("OutboundLink")],1),t._v("并创建一个新项目，以简化以下步骤 。这样做会自动生成一个新的项目结构，以便您可以立即开始编码。我们建议尝试使用Spring Initializr来熟悉它。")])]),t._v(" "),s("h3",{attrs:{id:"_6-1。使用spring-initializr创建spring-task项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1。使用spring-initializr创建spring-task项目"}},[t._v("#")]),t._v(" 6.1。使用Spring Initializr创建Spring Task项目")]),t._v(" "),s("p",[t._v("现在，我们可以创建和测试可打印"),s("code",[t._v("Hello, World!")]),t._v("到控制台的应用程序。")]),t._v(" "),s("p",[t._v("为此：")]),t._v(" "),s("ol",[s("li",[t._v("访问"),s("a",{attrs:{href:"https://start.spring.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Initialzr"),s("OutboundLink")],1),t._v("网站。\n"),s("ol",[s("li",[t._v("创建一个新的Maven项目，其"),s("strong",[t._v("组")]),t._v("名称为"),s("code",[t._v("io.spring.demo")]),t._v("，"),s("strong",[t._v("工件")]),t._v("名称为"),s("code",[t._v("helloworld")]),t._v("。")]),t._v(" "),s("li",[t._v("在“依赖关系”文本框中，键入"),s("code",[t._v("task")]),t._v("然后选择"),s("code",[t._v("Cloud Task")]),t._v("依赖关系。")]),t._v(" "),s("li",[t._v("在“依赖关系”文本框中，键入"),s("code",[t._v("jdbc")]),t._v("然后选择"),s("code",[t._v("JDBC")]),t._v("依赖关系。")]),t._v(" "),s("li",[t._v("在“依赖关系”文本框中，键入"),s("code",[t._v("h2")]),t._v("，然后选择"),s("code",[t._v("H2")]),t._v("。（或您喜欢的数据库）")]),t._v(" "),s("li",[t._v("单击"),s("strong",[t._v("生成项目")]),t._v("按钮")])])]),t._v(" "),s("li",[t._v("解压缩helloworld.zip文件并将项目导入到您喜欢的IDE中。")])]),t._v(" "),s("h3",{attrs:{id:"_6-2。编写代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2。编写代码"}},[t._v("#")]),t._v(" 6.2。编写代码")]),t._v(" "),s("p",[t._v("要完成我们的应用程序，我们需要"),s("code",[t._v("HelloworldApplication")]),t._v("使用以下内容更新生成的内容，以便启动任务。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("helloworld")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoconfigure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloworldApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commandLineRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorldCommandLineRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloworldApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorldCommandLineRunner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("尽管它看起来很小，但仍在继续。有关Spring Boot的详细信息，请参阅 "),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot参考文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("现在我们可以在中打开"),s("code",[t._v("application.properties")]),t._v("文件"),s("code",[t._v("src/main/resources")]),t._v("。我们需要在中配置两个属性"),s("code",[t._v("application.properties")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("application.name")]),t._v("：设置应用程序名称（转换为任务名称）")]),t._v(" "),s("li",[s("code",[t._v("logging.level")]),t._v("：将Spring Cloud Task的日志记录设置为以"),s("code",[t._v("DEBUG")]),t._v("了解正在发生的事情。")])]),t._v(" "),s("p",[t._v("以下示例显示了如何同时执行这两项操作：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("logging.level.org.springframework.cloud.task=DEBUG\nspring.application.name=helloWorld\n")])])]),s("h4",{attrs:{id:"_6-2-1。任务自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1。任务自动配置"}},[t._v("#")]),t._v(" 6.2.1。任务自动配置")]),t._v(" "),s("p",[t._v("当包含Spring Cloud Task Starter依赖项时，Task会自动配置所有bean以引导其功能。此配置的一部分注册"),s("code",[t._v("TaskRepository")]),t._v("以及用于其使用的基础结构。")]),t._v(" "),s("p",[t._v("在我们的演示中，"),s("code",[t._v("TaskRepository")]),t._v("使用嵌入式H2数据库记录任务的结果。这个H2嵌入式数据库不是针对生产环境的实用解决方案，因为一旦任务结束，H2 DB就会消失。但是，为了获得快速入门的经验，我们可以在示例中使用此方法，并在日志中回显该存储库中正在更新的内容。在“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#features-configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置”"),s("OutboundLink")],1),t._v("部分（本文档后面的内容）中，我们介绍了如何自定义Spring Cloud Task提供的组件的配置。")]),t._v(" "),s("p",[t._v("当我们的示例应用程序运行时，Spring Boot启动我们的"),s("code",[t._v("HelloWorldCommandLineRunner")]),t._v(" 并输出“ Hello，World！”消息到标准输出。该"),s("code",[t._v("TaskLifecycleListener")]),t._v(" 记录任务的启动和资源库中的任务结束。")]),t._v(" "),s("h4",{attrs:{id:"_6-2-2。主要方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2。主要方法"}},[t._v("#")]),t._v(" 6.2.2。主要方法")]),t._v(" "),s("p",[t._v("main方法用作任何Java应用程序的入口点。我们的主要方法委托给Spring Boot的"),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-spring-application.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringApplication"),s("OutboundLink")],1),t._v("类。")]),t._v(" "),s("h4",{attrs:{id:"_6-2-3。commandlinerunner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3。commandlinerunner"}},[t._v("#")]),t._v(" 6.2.3。CommandLineRunner")]),t._v(" "),s("p",[t._v("Spring提供了许多引导应用程序逻辑的方法。Spring Boot通过其"),s("code",[t._v("*Runner")]),t._v("接口（"),s("code",[t._v("CommandLineRunner")]),t._v("或"),s("code",[t._v("ApplicationRunner")]),t._v("）以一种有组织的方式提供了一种方便的方法。行为良好的任务可以使用这两个运行程序之一来引导任何逻辑。")]),t._v(" "),s("p",[t._v("从"),s("code",[t._v("*Runner#run")]),t._v("执行方法到完成所有方法，都要考虑任务的生命周期。Spring Boot "),s("code",[t._v("*Runner")]),t._v("和Spring Cloud Task一样，允许应用程序使用多种 实现。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("从除"),s("code",[t._v("CommandLineRunner")]),t._v("或 "),s("code",[t._v("ApplicationRunner")]),t._v("（"),s("code",[t._v("InitializingBean#afterPropertiesSet")]),t._v("例如，使用）以外的机制引导的任何处理都不会被Spring Cloud Task记录。")])]),t._v(" "),s("h3",{attrs:{id:"_6-3。运行示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3。运行示例"}},[t._v("#")]),t._v(" 6.3。运行示例")]),t._v(" "),s("p",[t._v("此时，我们的应用程序应该可以工作了。由于此应用程序是基于Spring Boot的，因此我们可以从"),s("code",[t._v("$ mvn spring-boot:run")]),t._v("应用程序的根目录使用命令行来运行它，如以下示例所示（及其输出）：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ mvn clean spring-boot:run\n....... . . .\n....... . . . (Maven log output here)\n....... . . .\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v2.0.3.RELEASE)\n\n2018-07-23 17:44:34.426  INFO 1978 --- [           main] i.s.d.helloworld.HelloworldApplication   : Starting HelloworldApplication on Glenns-MBP-2.attlocal.net with PID 1978 (/Users/glennrenfro/project/helloworld/target/classes started by glennrenfro in /Users/glennrenfro/project/helloworld)\n2018-07-23 17:44:34.430  INFO 1978 --- [           main] i.s.d.helloworld.HelloworldApplication   : No active profile set, falling back to default profiles: default\n2018-07-23 17:44:34.472  INFO 1978 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d24f32d: startup date [Mon Jul 23 17:44:34 EDT 2018]; root of context hierarchy\n2018-07-23 17:44:35.280  INFO 1978 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\n2018-07-23 17:44:35.410  INFO 1978 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\n2018-07-23 17:44:35.419 DEBUG 1978 --- [           main] o.s.c.t.c.SimpleTaskConfiguration        : Using org.springframework.cloud.task.configuration.DefaultTaskConfigurer TaskConfigurer\n2018-07-23 17:44:35.420 DEBUG 1978 --- [           main] o.s.c.t.c.DefaultTaskConfigurer          : No EntityManager was found, using DataSourceTransactionManager\n2018-07-23 17:44:35.522 DEBUG 1978 --- [           main] o.s.c.t.r.s.TaskRepositoryInitializer    : Initializing task schema for h2 database\n2018-07-23 17:44:35.525  INFO 1978 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executing SQL script from class path resource [org/springframework/cloud/task/schema-h2.sql]\n2018-07-23 17:44:35.558  INFO 1978 --- [           main] o.s.jdbc.datasource.init.ScriptUtils     : Executed SQL script from class path resource [org/springframework/cloud/task/schema-h2.sql] in 33 ms.\n2018-07-23 17:44:35.728  INFO 1978 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\n2018-07-23 17:44:35.730  INFO 1978 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure\n2018-07-23 17:44:35.733  INFO 1978 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]\n2018-07-23 17:44:35.738  INFO 1978 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0\n2018-07-23 17:44:35.762 DEBUG 1978 --- [           main] o.s.c.t.r.support.SimpleTaskRepository   : Creating: TaskExecution{executionId=0, parentExecutionId=null, exitCode=null, taskName='application', startTime=Mon Jul 23 17:44:35 EDT 2018, endTime=null, exitMessage='null', externalExecutionId='null', errorMessage='null', arguments=[]}\n2018-07-23 17:44:35.772  INFO 1978 --- [           main] i.s.d.helloworld.HelloworldApplication   : Started HelloworldApplication in 1.625 seconds (JVM running for 4.764)\nHello, World!\n2018-07-23 17:44:35.782 DEBUG 1978 --- [           main] o.s.c.t.r.support.SimpleTaskRepository   : Updating: TaskExecution with executionId=1 with the following {exitCode=0, endTime=Mon Jul 23 17:44:35 EDT 2018, exitMessage='null', errorMessage='null'}\n")])])]),s("p",[t._v("前面的输出包含我们感兴趣的三行：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("SimpleTaskRepository")]),t._v("在中记录了条目的创建"),s("code",[t._v("TaskRepository")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("CommandLineRunner")]),t._v("“ Hello，World！”输出演示了我们的执行。")]),t._v(" "),s("li",[s("code",[t._v("SimpleTaskRepository")]),t._v("将任务的完成记录在中"),s("code",[t._v("TaskRepository")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在"),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples/timestamp",target:"_blank",rel:"noopener noreferrer"}},[t._v("此处"),s("OutboundLink")],1),t._v("的Spring Cloud Task Project的示例模块中可以找到一个简单的任务应用程序 。")])]),t._v(" "),s("h1",{attrs:{id:"特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[t._v("#")]),t._v(" 特征")]),t._v(" "),s("p",[t._v("本节将详细介绍Spring Cloud Task，包括如何使用它，如何配置它以及适当的扩展点。")]),t._v(" "),s("h2",{attrs:{id:"_7-spring-cloud-task的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-spring-cloud-task的生命周期"}},[t._v("#")]),t._v(" 7. Spring Cloud Task的生命周期")]),t._v(" "),s("p",[t._v("在大多数情况下，现代云环境是围绕执行不会终止的流程而设计的。如果确实结束，则通常会重新启动它们。尽管大多数平台确实具有某种方式来运行在结束时不会重新启动的进程，但是通常不会以消耗性的方式维护该运行的结果。Spring Cloud Task提供了在环境中执行短暂流程并记录结果的功能。这样做可以通过消息的任务集成，围绕短暂的流程以及运行时间更长的服务建立微服务架构。")]),t._v(" "),s("p",[t._v("尽管此功能在云环境中很有用，但在传统部署模型中也会出现相同的问题。当使用调度程序（例如cron）运行Spring Boot应用程序时，能够在应用程序完成后监视其结果很有用。")]),t._v(" "),s("p",[t._v("Spring Cloud Task采用了一种方法，即Spring Boot应用程序可以有一个开始和结束，并且仍然可以成功。批处理应用程序是一个预期的过程（通常是短暂的）可能如何有所帮助的示例。")]),t._v(" "),s("p",[t._v("Spring Cloud Task记录给定任务的生命周期事件。大多数Web应用程序代表的大多数长时间运行的进程不会保存其生命周期事件。Spring Cloud Task的核心任务可以做到。")]),t._v(" "),s("p",[t._v("生命周期由单个任务执行组成。这是配置为任务的Spring Boot应用程序的物理执行（也就是说，它具有Sprint Cloud Task依赖项）。")]),t._v(" "),s("p",[t._v("在任务的开始，之前的任何"),s("code",[t._v("CommandLineRunner")]),t._v("或"),s("code",[t._v("ApplicationRunner")]),t._v(" 实现已运行，在一个条目"),s("code",[t._v("TaskRepository")]),t._v("被创建，记录开始事件。该事件是"),s("code",[t._v("SmartLifecycle#start")]),t._v("由Spring框架触发的。这向系统指示所有Bean都已准备就绪，并且在运行Spring Boot提供的任何"),s("code",[t._v("CommandLineRunner")]),t._v("或"),s("code",[t._v("ApplicationRunner")]),t._v("实现之前已经存在。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("任务的记录仅在成功引导 "),s("code",[t._v("ApplicationContext")]),t._v("。如果上下文根本无法引导，则不会记录任务的运行。")])]),t._v(" "),s("p",[t._v("在完成"),s("code",[t._v("*Runner#run")]),t._v("Spring Boot 的所有调用或失败后 "),s("code",[t._v("ApplicationContext")]),t._v("（由表示"),s("code",[t._v("ApplicationFailedEvent")]),t._v("），任务执行将在存储库中更新并显示结果。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果应用程序要求"),s("code",[t._v("ApplicationContext")]),t._v("在完成任务时关闭该应用程序（"),s("code",[t._v("*Runner#run")]),t._v("已调用所有方法并且已更新任务存储库），请将属性设置"),s("code",[t._v("spring.cloud.task.closecontext_enabled")]),t._v(" 为true。")])]),t._v(" "),s("h3",{attrs:{id:"_7-1。任务执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1。任务执行"}},[t._v("#")]),t._v(" 7.1。任务执行")]),t._v(" "),s("p",[t._v("存储在中的信息在该类中"),s("code",[t._v("TaskRepository")]),t._v("建模，"),s("code",[t._v("TaskExecution")]),t._v("并包含以下信息：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("领域")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("executionid")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("任务运行的唯一ID。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("exitCode")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从"),s("code",[t._v("ExitCodeExceptionMapper")]),t._v("实现生成的退出代码。如果没有生成退出代码，但是"),s("code",[t._v("ApplicationFailedEvent")]),t._v("抛出，则设置为1。否则，假定为0。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("taskName")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("任务的名称，由configure决定"),s("code",[t._v("TaskNameResolver")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("startTime")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如"),s("code",[t._v("SmartLifecycle#start")]),t._v("呼叫所示，任务开始的时间。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("endTime")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("任务完成的时间，如所示"),s("code",[t._v("ApplicationReadyEvent")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("exitMessage")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("退出时可用的任何信息。可以通过编程设置 "),s("code",[t._v("TaskExecutionListener")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("errorMessage")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果异常是导致任务结束的原因（如所示 "),s("code",[t._v("ApplicationFailedEvent")]),t._v("），则该异常的堆栈跟踪存储在此处。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("arguments")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("List")]),t._v("传递给可执行启动应用程序的字符串命令行参数A。")])])])]),t._v(" "),s("h3",{attrs:{id:"_7-2。映射退出代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2。映射退出代码"}},[t._v("#")]),t._v(" 7.2。映射退出代码")]),t._v(" "),s("p",[t._v("任务完成后，它将尝试将退出代码返回到OS。如果我们看一下"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#getting-started-developing-first-task",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始示例"),s("OutboundLink")],1),t._v("，我们可以看到我们没有控制应用程序的这一方面。因此，如果引发异常，则JVM返回的代码在调试时可能会有用，也可能不会有用。")]),t._v(" "),s("p",[t._v("因此，Spring Boot提供了一个接口，"),s("code",[t._v("ExitCodeExceptionMapper")]),t._v("使您可以将未捕获的异常映射到退出代码。这样做可以让您在退出代码级别指示出了什么问题。另外，通过以这种方式映射退出代码，Spring Cloud Task记录返回的退出代码。")]),t._v(" "),s("p",[t._v("如果任务以SIG-INT或SIG-TERM终止，则除非代码中另外指定，否则退出代码为零。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("任务运行时，退出代码在存储库中存储为null。任务完成后，将根据本节前面介绍的准则存储适当的退出代码。")])]),t._v(" "),s("h2",{attrs:{id:"_8-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-配置"}},[t._v("#")]),t._v(" 8.配置")]),t._v(" "),s("p",[t._v("Spring Cloud Task提供了"),s("code",[t._v("DefaultTaskConfigurer")]),t._v("和"),s("code",[t._v("SimpleTaskConfiguration")]),t._v("类中定义的即用型配置 。本节详细介绍了默认值以及如何根据需要自定义Spring Cloud Task。")]),t._v(" "),s("h3",{attrs:{id:"_8-1。数据源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1。数据源"}},[t._v("#")]),t._v(" 8.1。数据源")]),t._v(" "),s("p",[t._v("Spring Cloud Task使用数据源来存储任务执行的结果。默认情况下，我们提供了一个H2的内存实例，以提供一种引导开发的简单方法。但是，在生产环境中，您可能需要配置自己的"),s("code",[t._v("DataSource")]),t._v("。")]),t._v(" "),s("p",[t._v("如果您的应用程序仅使用一个，"),s("code",[t._v("DataSource")]),t._v("并且既用作您的业务架构又用作任务存储库，那么您所需要做的就是提供任何内容"),s("code",[t._v("DataSource")]),t._v("（最简单的方法是通过Spring Boot的配置约定）。这 "),s("code",[t._v("DataSource")]),t._v("是自动存储库使用春云任务。")]),t._v(" "),s("p",[t._v("如果您的应用程序使用多个应用程序"),s("code",[t._v("DataSource")]),t._v("，则需要使用适当的配置任务存储库"),s("code",[t._v("DataSource")]),t._v("。可以通过实现来实现这种自定义"),s("code",[t._v("TaskConfigurer")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_8-2。表前缀"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2。表前缀"}},[t._v("#")]),t._v(" 8.2。表前缀")]),t._v(" "),s("p",[t._v("的一个可修改属性"),s("code",[t._v("TaskRepository")]),t._v("是任务表的表前缀。默认情况下，它们都以开头"),s("code",[t._v("TASK_")]),t._v("。"),s("code",[t._v("TASK_EXECUTION")]),t._v("和"),s("code",[t._v("TASK_EXECUTION_PARAMS")]),t._v(" 是两个例子。但是，存在修改此前缀的潜在原因。如果需要在表名称之前添加模式名称，或者在同一模式中需要多个任务表，则必须更改表前缀。您可以将设置"),s("code",[t._v("spring.cloud.task.tablePrefix")]),t._v("为所需的前缀，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.tablePrefix=yourPrefix\n")])])]),s("h3",{attrs:{id:"_8-3。启用-禁用表初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3。启用-禁用表初始化"}},[t._v("#")]),t._v(" 8.3。启用/禁用表初始化")]),t._v(" "),s("p",[t._v("如果您正在创建任务表，并且不希望Spring Cloud Task在任务启动时创建它们，请将"),s("code",[t._v("spring.cloud.task.initialize-enabled")]),t._v("属性设置为 "),s("code",[t._v("false")]),t._v("，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.initialize-enabled=false\n")])])]),s("p",[t._v("默认为"),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("该属性"),s("code",[t._v("spring.cloud.task.initialize.enable")]),t._v("已弃用。")])]),t._v(" "),s("h3",{attrs:{id:"_8-4。外部生成的任务id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4。外部生成的任务id"}},[t._v("#")]),t._v(" 8.4。外部生成的任务ID")]),t._v(" "),s("p",[t._v("在某些情况下，您可能需要考虑请求任务与基础结构实际启动任务之间的时间差。Spring Cloud Task可让您"),s("code",[t._v("TaskExecution")]),t._v("在请求任务时创建一个。然后将生成的执行ID传递"),s("code",[t._v("TaskExecution")]),t._v("给任务，以便它可以更新"),s("code",[t._v("TaskExecution")]),t._v("任务的整个生命周期。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("TaskExecution`可以通过在引用保存对象的数据存储区`createTaskExecution`的实现上调用方法来创建A。`TaskRepository``TaskExecution\n")])])]),s("p",[t._v("为了将您的任务配置为使用generate "),s("code",[t._v("TaskExecutionId")]),t._v("，请添加以下属性：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.executionid=yourtaskId\n")])])]),s("h3",{attrs:{id:"_8-5。外部任务id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5。外部任务id"}},[t._v("#")]),t._v(" 8.5。外部任务ID")]),t._v(" "),s("p",[t._v("Spring Cloud Task允许您为每个存储一个外部任务ID "),s("code",[t._v("TaskExecution")]),t._v("。一个示例是在平台上启动任务时由Cloud Foundry提供的任务ID。为了将您的任务配置为使用generate "),s("code",[t._v("TaskExecutionId")]),t._v("，请添加以下属性：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.external-execution-id=<externalTaskId>\n")])])]),s("h3",{attrs:{id:"_8-6。父任务id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-6。父任务id"}},[t._v("#")]),t._v(" 8.6。父任务ID")]),t._v(" "),s("p",[t._v("Spring Cloud Task可让您存储每个任务的父任务ID "),s("code",[t._v("TaskExecution")]),t._v("。一个示例就是执行另一个任务或多个任务的任务，并且您想记录哪个任务启动了每个子任务。为了配置您的任务以设置父 "),s("code",[t._v("TaskExecutionId")]),t._v("项，请在子任务上添加以下属性：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.parent-execution-id=<parentExecutionTaskId>\n")])])]),s("h3",{attrs:{id:"_8-7。taskconfigurer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-7。taskconfigurer"}},[t._v("#")]),t._v(" 8.7。TaskConfigurer")]),t._v(" "),s("p",[t._v("这"),s("code",[t._v("TaskConfigurer")]),t._v("是一个策略界面，可让您自定义Spring Cloud Task组件的配置方式。默认情况下，我们提供"),s("code",[t._v("DefaultTaskConfigurer")]),t._v("提供逻辑默认值的："),s("code",[t._v("Map")]),t._v("基于内存的组件（如果未"),s("code",[t._v("DataSource")]),t._v("提供，则对开发有用 ）和基于JDBC的组件（如果有"),s("code",[t._v("DataSource")]),t._v(" 可用，则有用）。")]),t._v(" "),s("p",[t._v("将"),s("code",[t._v("TaskConfigurer")]),t._v("允许您配置三个主要组成部分：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("零件")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("默认值（由提供"),s("code",[t._v("DefaultTaskConfigurer")]),t._v("）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("TaskRepository")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("执行"),s("code",[t._v("TaskRepository")]),t._v("要使用的。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("SimpleTaskRepository")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("TaskExplorer")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("使用的实现"),s("code",[t._v("TaskExplorer")]),t._v("（用于只读访问任务存储库的组件）。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("SimpleTaskExplorer")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("PlatformTransactionManager")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在运行任务更新时要使用的事务管理器。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("DataSourceTransactionManager")]),t._v("如果使用a "),s("code",[t._v("DataSource")]),t._v("。 "),s("code",[t._v("ResourcelessTransactionManager")]),t._v("如果不是这样。")])])])]),t._v(" "),s("p",[t._v("您可以通过创建"),s("code",[t._v("TaskConfigurer")]),t._v("接口的自定义实现来自定义上表中描述的任何组件。通常，扩展 "),s("code",[t._v("DefaultTaskConfigurer")]),t._v("（如果"),s("code",[t._v("TaskConfigurer")]),t._v("未找到a时提供）并覆盖所需的吸气剂就足够了。但是，可能需要从头开始实现。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("用户不应直接使用直接的getter方法，"),s("code",[t._v("TaskConfigurer")]),t._v("除非他们使用它来提供要作为Spring Beans公开的实现。")])]),t._v(" "),s("h3",{attrs:{id:"_8-8。任务名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-8。任务名称"}},[t._v("#")]),t._v(" 8.8。任务名称")]),t._v(" "),s("p",[t._v("在大多数情况下，任务的名称是Spring Boot中配置的应用程序名称。但是，在某些情况下，您可能希望将任务的运行映射到其他名称。Spring Cloud Data Flow就是这样的一个示例（因为您可能希望使用任务定义的名称来运行任务）。因此，我们提供了通过"),s("code",[t._v("TaskNameResolver")]),t._v("界面自定义任务命名方式的功能。")]),t._v(" "),s("p",[t._v("默认情况下，Spring Cloud Task提供"),s("code",[t._v("SimpleTaskNameResolver")]),t._v("，使用以下选项（按优先顺序）：")]),t._v(" "),s("ol",[s("li",[t._v("一个Spring Boot属性（以Spring Boot允许的任何方式配置）称为 "),s("code",[t._v("spring.cloud.task.name")]),t._v("。")]),t._v(" "),s("li",[t._v("使用Spring Boot的规则解析的应用程序名称（通过获得 "),s("code",[t._v("ApplicationContext#getId")]),t._v("）。")])]),t._v(" "),s("h3",{attrs:{id:"_8-9。任务执行监听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-9。任务执行监听器"}},[t._v("#")]),t._v(" 8.9。任务执行监听器")]),t._v(" "),s("p",[s("code",[t._v("TaskExecutionListener")]),t._v("使您可以注册侦听器，以了解在任务生命周期中发生的特定事件。为此，创建一个实现该"),s("code",[t._v("TaskExecutionListener")]),t._v("接口的类 。"),s("code",[t._v("TaskExecutionListener")]),t._v(" 通知以下事件通知实现该接口的类：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("onTaskStartup")]),t._v("：将储存"),s("code",[t._v("TaskExecution")]),t._v("到之前"),s("code",[t._v("TaskRepository")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("onTaskEnd")]),t._v("：在更新中的"),s("code",[t._v("TaskExecution")]),t._v("条目"),s("code",[t._v("TaskRepository")]),t._v("并标记任务的最终状态之前。")]),t._v(" "),s("li",[s("code",[t._v("onTaskFailed")]),t._v("：在"),s("code",[t._v("onTaskEnd")]),t._v("任务引发未处理的异常时，在调用方法之前。")])]),t._v(" "),s("p",[t._v("Spring Cloud Task还允许您"),s("code",[t._v("TaskExecution")]),t._v("通过使用以下方法注释将侦听器添加到Bean中的方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@BeforeTask")]),t._v("：将储存"),s("code",[t._v("TaskExecution")]),t._v("到之前"),s("code",[t._v("TaskRepository")])]),t._v(" "),s("li",[s("code",[t._v("@AfterTask")]),t._v("：在 标记"),s("code",[t._v("TaskExecution")]),t._v("条目"),s("code",[t._v("TaskRepository")]),t._v("的最终状态之前，在更新条目之前。")]),t._v(" "),s("li",[s("code",[t._v("@FailedTask")]),t._v("：在"),s("code",[t._v("@AfterTask")]),t._v("任务引发未处理的异常时，在调用方法之前。")])]),t._v(" "),s("p",[t._v("以下示例显示了正在使用的三个注释：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BeforeTask")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskExecution")]),t._v(" taskExecution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterTask")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskExecution")]),t._v(" taskExecution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FailedTask")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskExecution")]),t._v(" taskExecution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" throwable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("ApplicationListener")]),t._v("在链中 插入比"),s("code",[t._v("TaskLifecycleListener")]),t._v("存在的链更早的链可能会导致意外的后果。")])]),t._v(" "),s("h4",{attrs:{id:"_8-9-1。任务执行侦听器引发的异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-9-1。任务执行侦听器引发的异常"}},[t._v("#")]),t._v(" 8.9.1。任务执行侦听器引发的异常")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("TaskExecutionListener")]),t._v("事件处理程序引发了异常，则该事件处理程序的所有侦听器处理都将停止。例如，如果"),s("code",[t._v("onTaskStartup")]),t._v("启动了三个侦听器，并且第一个"),s("code",[t._v("onTaskStartup")]),t._v("事件处理程序引发异常，"),s("code",[t._v("onTaskStartup")]),t._v("则不会调用其他两个方法。但是，会调用的其他事件处理程序（"),s("code",[t._v("onTaskEnd")]),t._v(" 和"),s("code",[t._v("onTaskFailed")]),t._v("）"),s("code",[t._v("TaskExecutionListeners")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("TaskExecutionListener")]),t._v(" 事件处理程序引发异常时返回的退出代码是"),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/ExitCodeEvent.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExitCodeEvent"),s("OutboundLink")],1),t._v("报告的退出代码 。如果未"),s("code",[t._v("ExitCodeEvent")]),t._v("发出，则对抛出的Exception进行评估，以查看其是否为"),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-application-exit",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExitCodeGenerator"),s("OutboundLink")],1),t._v("类型 。如果是这样，它将返回的退出代码"),s("code",[t._v("ExitCodeGenerator")]),t._v("。否则，"),s("code",[t._v("1")]),t._v(" 返回。")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("onTaskStartup")]),t._v("方法中抛出异常，则应用程序的退出代码将为"),s("code",[t._v("1")]),t._v("。如果在"),s("code",[t._v("onTaskEnd")]),t._v("或"),s("code",[t._v("onTaskFailed")]),t._v(" 方法中引发了异常，则应用程序的退出代码将是使用上面列举的规则建立的退出代码。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在例外的情况下，在被抛出"),s("code",[t._v("onTaskStartup")]),t._v("，"),s("code",[t._v("onTaskEnd")]),t._v("或"),s("code",[t._v("onTaskFailed")]),t._v(" 不能覆盖使用应用程序的退出代码"),s("code",[t._v("ExitCodeExceptionMapper")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"_8-9-2。退出讯息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-9-2。退出讯息"}},[t._v("#")]),t._v(" 8.9.2。退出讯息")]),t._v(" "),s("p",[t._v("您可以使用来以编程方式为任务设置退出消息 "),s("code",[t._v("TaskExecutionListener")]),t._v("。这是通过设置来完成的"),s("code",[t._v("TaskExecution’s")]),t._v(" "),s("code",[t._v("exitMessage")]),t._v("，然后将其传递到中"),s("code",[t._v("TaskExecutionListener")]),t._v("。以下示例显示了一个带有注释的方法"),s("code",[t._v("@AfterTask")]),t._v(" "),s("code",[t._v("ExecutionListener")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterTask")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterMe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskExecution")]),t._v(" taskExecution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    taskExecution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExitMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AFTER EXIT MESSAGE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("一个"),s("code",[t._v("ExitMessage")]),t._v("可以在任何监听事件的设定（"),s("code",[t._v("onTaskStartup")]),t._v("， "),s("code",[t._v("onTaskFailed")]),t._v("，和"),s("code",[t._v("onTaskEnd")]),t._v("）。三个侦听器的优先顺序如下：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("onTaskEnd")])]),t._v(" "),s("li",[s("code",[t._v("onTaskFailed")])]),t._v(" "),s("li",[s("code",[t._v("onTaskStartup")])])]),t._v(" "),s("p",[t._v("例如，如果您"),s("code",[t._v("exitMessage")]),t._v("为"),s("code",[t._v("onTaskStartup")]),t._v("和"),s("code",[t._v("onTaskFailed")]),t._v(" 侦听器设置，并且任务没有失败而结束，则"),s("code",[t._v("exitMessage")]),t._v("from中的from将"),s("code",[t._v("onTaskStartup")]),t._v(" 存储在资源库中。否则，如果发生故障，将存储"),s("code",[t._v("exitMessage")]),t._v("from中的"),s("code",[t._v("onTaskFailed")]),t._v("。此外，如果你设置的"),s("code",[t._v("exitMessage")]),t._v("与 "),s("code",[t._v("onTaskEnd")]),t._v("听众的"),s("code",[t._v("exitMessage")]),t._v("距离"),s("code",[t._v("onTaskEnd")]),t._v("从两取代了退出消息"),s("code",[t._v("onTaskStartup")]),t._v("和"),s("code",[t._v("onTaskFailed")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_8-10。限制spring-cloud任务实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-10。限制spring-cloud任务实例"}},[t._v("#")]),t._v(" 8.10。限制Spring Cloud任务实例")]),t._v(" "),s("p",[t._v("Spring Cloud Task使您可以确定一次只能运行一个具有给定任务名称的任务。为此，您需要建立"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#features-task-name",target:"_blank",rel:"noopener noreferrer"}},[t._v("任务名称"),s("OutboundLink")],1),t._v("并"),s("code",[t._v("spring.cloud.task.single-instance-enabled=true")]),t._v("为每个任务执行进行设置 。当第一个任务执行正在运行时，任何其他时间您尝试运行具有相同 "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#features-task-name",target:"_blank",rel:"noopener noreferrer"}},[t._v("任务名称和"),s("OutboundLink")],1),t._v(" "),s("code",[t._v("spring.cloud.task.single-instance-enabled = true")]),t._v("的任务时，任务将失败，并显示以下错误消息："),s("code",[t._v('Task with name "application" is already running.')]),t._v("默认为值"),s("code",[t._v("spring.cloud.task.single-instance-enabled")]),t._v("IS "),s("code",[t._v("false")]),t._v("。以下示例显示了如何设置"),s("code",[t._v("spring.cloud.task.single-instance-enabled")]),t._v("为"),s("code",[t._v("true")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.single-instance-enabled=true or false\n")])])]),s("p",[t._v("要使用此功能，必须将以下Spring Integration依赖项添加到您的应用程序：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.integration"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-integration-core"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.integration"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-integration-jdbc"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果任务由于启用了此功能而失败，并且另一个任务正在使用相同的任务名称运行，则该应用程序的退出代码将为1。")])]),t._v(" "),s("h3",{attrs:{id:"_8-11。禁用spring-cloud-task自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-11。禁用spring-cloud-task自动配置"}},[t._v("#")]),t._v(" 8.11。禁用Spring Cloud Task自动配置")]),t._v(" "),s("p",[t._v("如果不应为实现自动配置Spring Cloud Task，则可以禁用Task的自动配置。这可以通过在Task应用程序中添加以下注释来完成：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@EnableAutoConfiguration(exclude={SimpleTaskAutoConfiguration.class})\n")])])]),s("p",[t._v("您还可以通过将"),s("code",[t._v("spring.cloud.task.autoconfiguration.enabled")]),t._v("属性设置为来禁用任务自动配置"),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("h1",{attrs:{id:"批量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量"}},[t._v("#")]),t._v(" 批量")]),t._v(" "),s("p",[t._v("本节将详细介绍Spring Cloud Task与Spring Batch的集成。本节介绍了跟踪作业执行与执行任务之间的关联以及通过Spring Cloud Deployer进行的远程分区。")]),t._v(" "),s("h2",{attrs:{id:"_9-将作业执行与执行该作业的任务相关联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-将作业执行与执行该作业的任务相关联"}},[t._v("#")]),t._v(" 9.将作业执行与执行该作业的任务相关联")]),t._v(" "),s("p",[t._v("Spring Boot提供了用于在über-jar中执行批处理作业的工具。Spring Boot对此功能的支持使开发人员可以在该执行中执行多个批处理作业。Spring Cloud Task提供了将作业的执行（作业执行）与任务的执行相关联的功能，以便可以追溯到另一个。")]),t._v(" "),s("p",[t._v("Spring Cloud Task通过使用来实现此功能"),s("code",[t._v("TaskBatchExecutionListener")]),t._v("。默认情况下，此侦听器在配置了Spring Batch Job（通过"),s("code",[t._v("Job")]),t._v("在上下文中定义类型的bean ）和 "),s("code",[t._v("spring-cloud-task-batch")]),t._v("classpath上的jar的任何上下文中自动配置。侦听器被注入满足这些条件的所有作业中。")]),t._v(" "),s("h3",{attrs:{id:"_9-1。覆盖taskbatchexecutionlistener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1。覆盖taskbatchexecutionlistener"}},[t._v("#")]),t._v(" 9.1。覆盖TaskBatchExecutionListener")]),t._v(" "),s("p",[t._v("为了防止将侦听器注入当前上下文中的任何批处理作业中，可以使用标准的Spring Boot机制禁用自动配置。")]),t._v(" "),s("p",[t._v("要仅将侦听器注入到上下文中的特定作业中，请覆盖 "),s("code",[t._v("batchTaskExecutionListenerBeanPostProcessor")]),t._v("并提供作业Bean ID的列表，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskBatchExecutionListenerBeanPostProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("batchTaskExecutionListenerBeanPostProcessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskBatchExecutionListenerBeanPostProcessor")]),t._v(" postProcessor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskBatchExecutionListenerBeanPostProcessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tpostProcessor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setJobNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"job1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"job2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" postProcessor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("你可以找到春云任务项目的采样模块中的样品批处理应用程序， "),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples/batch-job",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_10-远程分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-远程分区"}},[t._v("#")]),t._v(" 10.远程分区")]),t._v(" "),s("p",[t._v("Spring Cloud Deployer提供了用于在大多数云基础架构上启动基于Spring Boot的应用程序的工具。在"),s("code",[t._v("DeployerPartitionHandler")]),t._v("与 "),s("code",[t._v("DeployerStepExecutionHandler")]),t._v("委托工人步执行的春云部署的开展。")]),t._v(" "),s("p",[t._v("要配置"),s("code",[t._v("DeployerStepExecutionHandler")]),t._v("，您必须提供一个"),s("code",[t._v("Resource")]),t._v(" 代表要执行的Spring Bootüber-jar，一个"),s("code",[t._v("TaskLauncher")]),t._v("和一个 "),s("code",[t._v("JobExplorer")]),t._v("。您可以配置任何环境属性以及一次执行的最大工作程序数，轮询结果的时间间隔（默认为10秒）和超时（默认为-1或无超时）。以下示例显示了配置"),s("code",[t._v("PartitionHandler")]),t._v("外观：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PartitionHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("partitionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskLauncher")]),t._v(" taskLauncher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JobExplorer")]),t._v(" jobExplorer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavenProperties")]),t._v(" mavenProperties "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavenProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmavenProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRemoteRepositories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("singletonMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"springRepo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavenProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemoteRepository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("repository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" resource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavenResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s:%s:%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.spring.cloud"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"partitioned-batch-job"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1.0.RELEASE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mavenProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeployerPartitionHandler")]),t._v(" partitionHandler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeployerPartitionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taskLauncher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jobExplorer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"workerStep"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" commandLineArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcommandLineArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--spring.profiles.active=worker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcommandLineArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--spring.cloud.task.initialize.enable=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcommandLineArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--spring.batch.initializer.enabled=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tpartitionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCommandLineArgsProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PassThroughCommandLineArgsProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commandLineArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpartitionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEnvironmentVariablesProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NoOpEnvironmentVariablesProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpartitionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxWorkers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpartitionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setApplicationName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PartitionedBatchJobTask"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" partitionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("将环境变量传递到分区时，每个分区可能位于具有不同环境设置的不同计算机上。因此，您应该仅传递所需的那些环境变量。")])]),t._v(" "),s("p",[t._v("请注意，在上面的示例中，我们将最大工作程序数设置为2。设置最大工作程序数将建立一次应运行的最大分区数。")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Resource")]),t._v("将要执行预计是弹簧引导尤伯杯罐具有 "),s("code",[t._v("DeployerStepExecutionHandler")]),t._v("配置为"),s("code",[t._v("CommandLineRunner")]),t._v("在当前上下文中。前面示例中列举的存储库应该是über-jar所在的远程存储库。经理和工作人员都应该对用作作业存储库和任务存储库的同一数据存储具有可见性。一旦基础架构启动了Spring Boot jar并启动了Spring Boot "),s("code",[t._v("DeployerStepExecutionHandler")]),t._v("，步骤处理程序将执行请求的 "),s("code",[t._v("Step")]),t._v("。以下示例显示了如何配置"),s("code",[t._v("DefaultStepExecutionHandler")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeployerStepExecutionHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stepExecutionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JobExplorer")]),t._v(" jobExplorer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeployerStepExecutionHandler")]),t._v(" handler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeployerStepExecutionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jobExplorer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jobRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("你可以找到春云任务项目的采样模块中的样本远程分区的应用程序， "),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples/partitioned-batch-job",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_10-1。关于为kubernetes平台开发批处理分区的应用程序的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1。关于为kubernetes平台开发批处理分区的应用程序的注意事项"}},[t._v("#")]),t._v(" 10.1。关于为Kubernetes平台开发批处理分区的应用程序的注意事项")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在Kubernetes平台上部署分区应用程序时，必须对Spring Cloud Kubernetes Deployer使用以下依赖项：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-deployer-kubernetes"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("任务应用程序及其分区的应用程序名称需要遵循以下正则表达式模式："),s("code",[t._v("[a-z0-9]([-a-z0-9]*[a-z0-9])")]),t._v("。否则，将引发异常。")])])]),t._v(" "),s("h3",{attrs:{id:"_10-2。有关为cloud-foundry平台开发批处理分区的应用程序的说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2。有关为cloud-foundry平台开发批处理分区的应用程序的说明"}},[t._v("#")]),t._v(" 10.2。有关为Cloud Foundry平台开发批处理分区的应用程序的说明")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在Cloud Foundry平台上部署分区应用程序时，必须对Spring Cloud Foundry Deployer使用以下依赖项：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-deployer-cloudfoundry"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.projectreactor"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("reactor-core"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3.1.5.RELEASE"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.projectreactor.ipc"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("reactor-netty"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("0.7.5.RELEASE"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("配置分区处理程序时，需要建立Cloud Foundry Deployment环境变量，以便分区处理程序可以启动分区。以下列表显示了必需的环境变量：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_url")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_org")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_space")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_domain")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_username")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_password")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_services")])]),t._v(" "),s("li",[s("code",[t._v("spring_cloud_deployer_cloudfoundry_taskTimeout")])])])])]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("mysql")]),t._v("数据库服务的分区任务的一组部署环境变量示例可能类似于以下内容：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://api.local.pcfdev.io\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_org")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pcfdev-org\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_space")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pcfdev-space\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_domain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("local.pcfdev.io\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_services")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mysql\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("spring_cloud_deployer_cloudfoundry_taskTimeout")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("使用PCF-Dev时，还需要以下环境变量： "),s("code",[t._v("spring_cloud_deployer_cloudfoundry_skipSslValidation=true")])])]),t._v(" "),s("h2",{attrs:{id:"_11-批处理参考消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-批处理参考消息"}},[t._v("#")]),t._v(" 11.批处理参考消息")]),t._v(" "),s("p",[t._v("Spring Cloud Task提供了批处理作业发出信息性消息的功能。“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#stream-integration-batch-events",target:"_blank",rel:"noopener noreferrer"}},[t._v("春季批处理事件"),s("OutboundLink")],1),t._v(" ”部分详细介绍了此功能。")]),t._v(" "),s("h2",{attrs:{id:"_12-批处理作业退出代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-批处理作业退出代码"}},[t._v("#")]),t._v(" 12.批处理作业退出代码")]),t._v(" "),s("p",[t._v("正如所讨论的"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/#features-lifecycle-exit-codes",target:"_blank",rel:"noopener noreferrer"}},[t._v("前面"),s("OutboundLink")],1),t._v("，春云任务应用程序支持录制任务执行的退出代码的能力。但是，如果您在任务中运行Spring Batch Job，则无论Batch Job执行如何完成，使用默认的Batch / Boot行为时，任务的结果始终为零。请记住，任务是启动应用程序，并且从任务返回的退出代码与启动应用程序相同。要覆盖此行为，并允许任务时批处理作业返回返回其他的退出代码大于零 "),s("a",{attrs:{href:"https://docs.spring.io/spring-batch/4.0.x/reference/html/step.html#batchStatusVsExitStatus",target:"_blank",rel:"noopener noreferrer"}},[t._v("BatchStatus"),s("OutboundLink")],1),t._v(" 的"),s("code",[t._v("FAILED")]),t._v("，集"),s("code",[t._v("spring.cloud.task.batch.fail-on-job-failure")]),t._v("到"),s("code",[t._v("true")]),t._v("。然后，退出代码可以为1（默认值），也可以基于 "),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-spring-application.html#boot-features-application-exit",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定的 "),s("code",[t._v("ExitCodeGenerator")]),s("OutboundLink")],1),t._v("）")]),t._v(" "),s("p",[t._v("此功能使用的新功能"),s("code",[t._v("CommandLineRunner")]),t._v("替代了Spring Boot提供的功能。默认情况下，其配置顺序相同。但是，如果要自定义"),s("code",[t._v("CommandLineRunner")]),t._v("运行顺序，则可以通过设置"),s("code",[t._v("spring.cloud.task.batch.commandLineRunnerOrder")]),t._v("属性来设置其顺序 。要使您的任务根据批处理作业的执行结果返回退出代码，您需要编写自己的代码 "),s("code",[t._v("CommandLineRunner")]),t._v("。")]),t._v(" "),s("h1",{attrs:{id:"spring-cloud-stream集成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-stream集成"}},[t._v("#")]),t._v(" Spring Cloud Stream集成")]),t._v(" "),s("p",[t._v("任务本身可能是有用的，但是将任务集成到更大的生态系统中可以使它对于更复杂的处理和编排很有用。本节介绍Spring Cloud Task与Spring Cloud Stream的集成选项。")]),t._v(" "),s("h2",{attrs:{id:"_13-从spring-cloud-stream启动任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-从spring-cloud-stream启动任务"}},[t._v("#")]),t._v(" 13.从Spring Cloud Stream启动任务")]),t._v(" "),s("p",[t._v("您可以从流中启动任务。为此，创建一个接收器，以监听包含"),s("code",[t._v("TaskLaunchRequest")]),t._v("有效载荷的消息。该"),s("code",[t._v("TaskLaunchRequest")]),t._v("包含：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("uri")]),t._v("：针对要执行的任务工件。")]),t._v(" "),s("li",[s("code",[t._v("applicationName")]),t._v("：与任务关联的名称。如果未设置applicationName，则"),s("code",[t._v("TaskLaunchRequest")]),t._v("生成一个包含以下内容的任务名称："),s("code",[t._v("Task-<UUID>")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("commandLineArguments")]),t._v("：包含任务命令行参数的列表。")]),t._v(" "),s("li",[s("code",[t._v("environmentProperties")]),t._v("：包含任务要使用的环境变量的映射。")]),t._v(" "),s("li",[s("code",[t._v("deploymentProperties")]),t._v("：包含部署者用来部署任务的属性的映射。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果有效载荷是其他类型，则接收器将引发异常。")])]),t._v(" "),s("p",[t._v("例如，可以创建一个具有处理器的流，该处理器从HTTP源中获取数据，并创建一个"),s("code",[t._v("GenericMessage")]),t._v("包含"),s("code",[t._v("TaskLaunchRequest")]),t._v("的消息，并将消息发送到其输出通道。然后，任务接收器将从其输入通道接收消息，然后启动任务。")]),t._v(" "),s("p",[t._v("要创建taskSink，只需创建一个包含"),s("code",[t._v("EnableTaskLauncher")]),t._v("注解的Spring Boot应用程序 ，如以下示例所示：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableTaskLauncher")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskSinkApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskSinkApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Spring Cloud Task项目的"),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例模块"),s("OutboundLink")],1),t._v("包含一个示例接收器和处理器。要将这些样本安装到本地maven存储库中，请从属性设置为的"),s("code",[t._v("spring-cloud-task-samples")]),t._v("目录运行maven构建 ，如以下示例所示："),s("code",[t._v("skipInstall``false")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mvn clean install\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("maven.remoteRepositories.springRepo.url")]),t._v("属性必须设置为über-jar所在的远程存储库的位置。如果未设置，则没有远程存储库，因此它仅依赖于本地存储库。")])]),t._v(" "),s("h3",{attrs:{id:"_13-1。spring-cloud数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1。spring-cloud数据流"}},[t._v("#")]),t._v(" 13.1。Spring Cloud数据流")]),t._v(" "),s("p",[t._v("要在Spring Cloud Data Flow中创建流，必须首先注册我们创建的Task Sink应用程序。在以下示例中，我们将使用Spring Cloud Data Flow Shell注册Processor和Sink示例应用程序：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("app register --name taskSink --type sink --uri maven://io.spring.cloud:tasksink:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\napp register --name taskProcessor --type processor --uri maven:io.spring.cloud:taskprocessor:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("以下示例显示了如何从Spring Cloud Data Flow Shell创建流：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("stream create foo --definition "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http --server.port=9000|taskProcessor|taskSink"')]),t._v(" --deploy\n")])])]),s("h2",{attrs:{id:"_14-spring-cloud-task事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-spring-cloud-task事件"}},[t._v("#")]),t._v(" 14. Spring Cloud Task事件")]),t._v(" "),s("p",[t._v("当通过Spring Cloud Stream通道运行任务时，Spring Cloud Task提供了通过Spring Cloud Stream通道发出事件的功能。任务侦听器用于"),s("code",[t._v("TaskExecution")]),t._v("在名为的消息通道上发布"),s("code",[t._v("task-events")]),t._v("。此功能自动连接到具有任何任务"),s("code",[t._v("spring-cloud-stream")]),t._v("，"),s("code",[t._v("spring-cloud-stream-<binder>")]),t._v("以及在它的类路径中定义的任务。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("要禁用发出事件的侦听器，请将"),s("code",[t._v("spring.cloud.task.events.enabled")]),t._v(" 属性设置为"),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("p",[t._v("定义了适当的类路径后，以下任务"),s("code",[t._v("TaskExecution")]),t._v("在"),s("code",[t._v("task-events")]),t._v("通道上（在任务的开始和结束处）将事件作为事件发出：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskEventsApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskEventsApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskConfiguration")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commandLineRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The CommandLineRunner was executed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("绑定程序实现也必须位于类路径上。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("可以在Spring Cloud Task Project的示例模块中找到一个示例任务事件应用程序， "),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples/task-events",target:"_blank",rel:"noopener noreferrer"}},[t._v("在此处"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_14-1。禁用特定任务事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-1。禁用特定任务事件"}},[t._v("#")]),t._v(" 14.1。禁用特定任务事件")]),t._v(" "),s("p",[t._v("要禁用任务事件，可以将"),s("code",[t._v("spring.cloud.task.events.enabled")]),t._v("属性设置为 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_15-春季批处理活动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-春季批处理活动"}},[t._v("#")]),t._v(" 15.春季批处理活动")]),t._v(" "),s("p",[t._v("通过任务执行Spring Batch作业时，可以将Spring Cloud Task配置为基于Spring Batch中可用的Spring Batch侦听器发出参考消息。具体来说，以下Spring Batch侦听器将自动配置到每个批处理作业中，并在通过Spring Cloud Task运行时在关联的Spring Cloud Stream通道上发出消息：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("JobExecutionListener")]),t._v(" 听 "),s("code",[t._v("job-execution-events")])]),t._v(" "),s("li",[s("code",[t._v("StepExecutionListener")]),t._v(" 听 "),s("code",[t._v("step-execution-events")])]),t._v(" "),s("li",[s("code",[t._v("ChunkListener")]),t._v(" 听 "),s("code",[t._v("chunk-events")])]),t._v(" "),s("li",[s("code",[t._v("ItemReadListener")]),t._v(" 听 "),s("code",[t._v("item-read-events")])]),t._v(" "),s("li",[s("code",[t._v("ItemProcessListener")]),t._v(" 听 "),s("code",[t._v("item-process-events")])]),t._v(" "),s("li",[s("code",[t._v("ItemWriteListener")]),t._v(" 听 "),s("code",[t._v("item-write-events")])]),t._v(" "),s("li",[s("code",[t._v("SkipListener")]),t._v(" 听 "),s("code",[t._v("skip-events")])])]),t._v(" "),s("p",[s("code",[t._v("AbstractJob")]),t._v("当上下文中存在适当的bean（a "),s("code",[t._v("Job")]),t._v("和a "),s("code",[t._v("TaskLifecycleListener")]),t._v("）时，这些侦听器将自动配置为任意侦听器。侦听这些事件的配置以与绑定到任何其他Spring Cloud Stream通道相同的方式进行处理。我们的任务（运行批处理任务的任务）充当a "),s("code",[t._v("Source")]),t._v("，监听应用程序充当a "),s("code",[t._v("Processor")]),t._v("或a "),s("code",[t._v("Sink")]),t._v("。")]),t._v(" "),s("p",[t._v("一个示例可能是让应用程序监听"),s("code",[t._v("job-execution-events")]),t._v("频道以开始和停止作业。要配置监听应用程序，您将输入配置"),s("code",[t._v("job-execution-events")]),t._v("如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.stream.bindings.input.destination=job-execution-events\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("绑定程序实现也必须位于类路径上。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("可以在Spring Cloud Task Project的示例模块中找到示例批处理事件应用程序， "),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-task/tree/master/spring-cloud-task-samples/batch-events",target:"_blank",rel:"noopener noreferrer"}},[t._v("在此处"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_15-1。将批次事件发送到不同的渠道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1。将批次事件发送到不同的渠道"}},[t._v("#")]),t._v(" 15.1。将批次事件发送到不同的渠道")]),t._v(" "),s("p",[t._v("Spring Cloud Task为批处理事件提供的选项之一是能够更改特定侦听器可以向其发出消息的通道。要做到这一点，使用以下配置： "),s("code",[t._v("spring.cloud.stream.bindings.<the channel>.destination=<new destination>")]),t._v("。例如，如果"),s("code",[t._v("StepExecutionListener")]),t._v("需要将其消息发送到另一个通道 "),s("code",[t._v("my-step-execution-events")]),t._v("而不是default "),s("code",[t._v("step-execution-events")]),t._v("，则可以添加以下配置：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.stream.bindings.step-execution-events.destination=my-step-execution-events\n")])])]),s("h3",{attrs:{id:"_15-2。禁用批处理事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2。禁用批处理事件"}},[t._v("#")]),t._v(" 15.2。禁用批处理事件")]),t._v(" "),s("p",[t._v("要为所有批处理事件禁用侦听器功能，请使用以下配置：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring.cloud.task.batch.events.enabled=false\n")])])]),s("p",[t._v("要禁用特定的批处理事件，请使用以下配置：")]),t._v(" "),s("p",[s("code",[t._v("spring.cloud.task.batch.events.<batch event listener>.enabled=false")]),t._v("：")]),t._v(" "),s("p",[t._v("以下清单显示了可以禁用的单个侦听器：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("spring.cloud.task.batch.events.job-execution.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.step-execution.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.chunk.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.item-read.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.item-process.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.item-write.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\nspring.cloud.task.batch.events.skip.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n")])])]),s("h3",{attrs:{id:"_15-3。发出批量事件的订单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-3。发出批量事件的订单"}},[t._v("#")]),t._v(" 15.3。发出批量事件的订单")]),t._v(" "),s("p",[t._v("默认情况下，批处理事件具有"),s("code",[t._v("Ordered.LOWEST_PRECEDENCE")]),t._v("。要更改此值（例如，更改为5），请使用以下配置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("spring.cloud.task.batch.events.job-execution-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.step-execution-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.chunk-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.item-read-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.item-process-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.item-write-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nspring.cloud.task.batch.events.skip-order"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),s("h1",{attrs:{id:"附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),s("h2",{attrs:{id:"_16-任务库模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-任务库模式"}},[t._v("#")]),t._v(" 16.任务库模式")]),t._v(" "),s("p",[t._v("本附录为任务存储库中使用的数据库模式提供了ERD。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-cloud-task/docs/2.2.1.RELEASE/reference/images/task_schema.png",alt:"任务模式"}})]),t._v(" "),s("h2",{attrs:{id:"_17-构建此文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-构建此文档"}},[t._v("#")]),t._v(" 17.构建此文档")]),t._v(" "),s("p",[t._v("该项目使用Maven生成此文档。要自己生成它，请运行以下命令："),s("code",[t._v("$ ./mvnw clean package -P full")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_18-在cloud-foundry上运行task-app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-在cloud-foundry上运行task-app"}},[t._v("#")]),t._v(" 18.在Cloud Foundry上运行Task App")]),t._v(" "),s("p",[t._v("将Spring Cloud Task应用程序作为Cloud Foundry上的任务启动的最简单方法是使用Spring Cloud Data Flow。通过Spring Cloud Data Flow，您可以注册任务应用程序，为其创建定义，然后启动它。然后，您可以通过RESTful API，Spring Cloud Data Flow Shell或UI跟踪任务执行。要了解如何开始安装Data Flow，请遵循 参考文档的“ "),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("入门”"),s("OutboundLink")],1),t._v("部分中的说明。有关如何注册和启动任务的信息，请参阅"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#_the_lifecycle_of_a_task",target:"_blank",rel:"noopener noreferrer"}},[t._v("任务"),s("OutboundLink")],1),t._v("文档的"),s("a",{attrs:{href:"https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#_the_lifecycle_of_a_task",target:"_blank",rel:"noopener noreferrer"}},[t._v("生命周期"),s("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);a.default=n.exports}}]);