(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{403:function(t,a,e){"use strict";e.r(a);var s=e(26),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring-boot-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-cli"}},[t._v("#")]),t._v(" Spring Boot CLI")]),t._v(" "),e("p",[t._v("Spring Boot CLI是一个命令行工具，如果您想快速开发Spring应用程序，可以使用它。它使您可以运行Groovy脚本，这意味着您具有类似Java的熟悉语法，而没有太多样板代码。您还可以引导一个新项目或为其编写自己的命令。")]),t._v(" "),e("h2",{attrs:{id:"_1-安装cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装cli"}},[t._v("#")]),t._v(" 1.安装CLI")]),t._v(" "),e("p",[t._v("可以使用SDKMAN手动安装Spring Boot CLI（命令行界面）！（SDK Manager）或使用Homebrew或MacPorts（如果您是OSX用户）。有关全面的安装说明，请参见“入门”部分中的"),e("em",[t._v("getting-started.html")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"_2-使用cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用cli"}},[t._v("#")]),t._v(" 2.使用CLI")]),t._v(" "),e("p",[t._v("安装CLI后，可以通过"),e("code",[t._v("spring")]),t._v("在命令行中键入并按Enter 来运行它。如果"),e("code",[t._v("spring")]),t._v("不带任何参数运行，将显示一个简单的帮助屏幕，如下所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$春天\n用法：spring [--help] [--version]\n       <命令> [<参数>]\n\n可用的命令有：\n\n  运行[选项] <文件> [-] [参数]\n    运行Spring Groovy脚本\n\n  ...更多命令帮助显示在这里\n")])])]),e("p",[t._v("您可以键入"),e("code",[t._v("spring help")]),t._v("以获取有关任何受支持命令的更多详细信息，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring帮助运行\n春季运行-运行春季groovy脚本\n\n用法：春季运行[选项] <文件> [-] [参数]\n\n选项说明\n------ -----------\n--autoconfigure [布尔]添加自动配置编译器\n                             转换（默认值：true）\n--classpath，-cp其他类路径条目\n--no-guess-dependencies不要试图猜测依赖\n--no-guess-imports不要尝试猜测输入\n-q，--quiet安静的日志记录\n-v，--verbose详细记录依赖项\n                             解析度\n--watch监视指定文件的更改\n")])])]),e("p",[t._v("该"),e("code",[t._v("version")]),t._v("命令提供了一种快速的方法来检查您使用的Spring Boot版本，如下所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$春季版\nSpring CLI v2.2.2.RELEASE\n")])])]),e("h3",{attrs:{id:"_2-1。使用cli运行应用程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1。使用cli运行应用程序"}},[t._v("#")]),t._v(" 2.1。使用CLI运行应用程序")]),t._v(" "),e("p",[t._v("您可以使用以下"),e("code",[t._v("run")]),t._v("命令编译并运行Groovy源代码。Spring Boot CLI是完全独立的，因此您不需要任何外部Groovy安装。")]),t._v(" "),e("p",[t._v("以下示例显示了用Groovy编写的“ hello world” Web应用程序：")]),t._v(" "),e("p",[t._v("你好。")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebApplication")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    String "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("home")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Hello World!"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("要编译并运行该应用程序，请键入以下命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring run hello.groovy\n")])])]),e("p",[t._v("要将命令行参数传递给应用程序，请使用"),e("code",[t._v("--")]),t._v("将命令与“ spring”命令参数分开，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring run hello.groovy---server.port = 9000\n")])])]),e("p",[t._v("要设置JVM命令行参数，可以使用"),e("code",[t._v("JAVA_OPTS")]),t._v("环境变量，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ JAVA_OPTS = -Xmx1024m春季运行hello.groovy\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("code",[t._v("JAVA_OPTS")]),t._v("在Microsoft Windows上进行 设置时，请确保引用整个说明，例如"),e("code",[t._v('set "JAVA_OPTS=-Xms256m -Xmx2048m"')]),t._v("。这样做可以确保将值正确传递给流程。")])]),t._v(" "),e("h4",{attrs:{id:"_2-1-1。推导的-抓取-依赖性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1。推导的-抓取-依赖性"}},[t._v("#")]),t._v(" 2.1.1。推导的“抓取”依赖性")]),t._v(" "),e("p",[t._v("标准Groovy包含一个"),e("code",[t._v("@Grab")]),t._v("注释，使您可以声明对第三方库的依赖关系。Groovy可以使用这种有用的技术以与Maven或Gradle相同的方式下载jar，而无需使用构建工具。")]),t._v(" "),e("p",[t._v("Spring Boot进一步扩展了该技术，并尝试根据您的代码推断出哪些库可以“抢”。例如，由于"),e("code",[t._v("WebApplication")]),t._v("先前显示的代码使用"),e("code",[t._v("@RestController")]),t._v("注释，因此Spring Boot会获取“ Tomcat”和“ Spring MVC”。")]),t._v(" "),e("p",[t._v("以下各项用作“抓取提示”：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("物品")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("抓斗")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("JdbcTemplate")]),t._v("，"),e("code",[t._v("NamedParameterJdbcTemplate")]),t._v("，"),e("code",[t._v("DataSource")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("JDBC应用程序。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableJms")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("JMS应用程序。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableCaching")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("缓存抽象。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@Test")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("JUnit的。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableRabbit")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("RabbitMQ。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("延伸 "),e("code",[t._v("Specification")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spock测试。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableBatchProcessing")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("春季批。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@MessageEndpoint")]),t._v(" "),e("code",[t._v("@EnableIntegration")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("春季整合。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@Controller")]),t._v(" "),e("code",[t._v("@RestController")]),t._v(" "),e("code",[t._v("@EnableWebMvc")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Spring MVC +嵌入式Tomcat。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableWebSecurity")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("春季安全。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@EnableTransactionManagement")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("春季交易管理。")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("请参阅"),e("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/tree/v2.2.2.RELEASE/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/CompilerAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CompilerAutoConfiguration")]),e("OutboundLink")],1),t._v("Spring Boot CLI源代码中的子类，以准确了解如何应用定制。")])]),t._v(" "),e("h4",{attrs:{id:"_2-1-2。推导-抓取-坐标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2。推导-抓取-坐标"}},[t._v("#")]),t._v(" 2.1.2。推导“抓取”坐标")]),t._v(" "),e("p",[t._v("Spring Boot扩展了Groovy的标准"),e("code",[t._v("@Grab")]),t._v("支持，允许您指定不带组或版本的依赖项（例如"),e("code",[t._v("@Grab('freemarker')")]),t._v("）。这样做参考Spring Boot的默认依赖元数据来推断工件的组和版本。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("默认元数据与您使用的CLI版本相关。仅当您移至新版本的CLI时，它才会更改，从而使您可以控制依赖项的版本何时更改。在"),e("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/2.2.2.RELEASE/reference/html/appendix-dependency-versions.html#appendix-dependency-versions",target:"_blank",rel:"noopener noreferrer"}},[t._v("附录中"),e("OutboundLink")],1),t._v("可以找到一个表格，其中显示了默认元数据中包含的依赖关系及其版本。")])]),t._v(" "),e("h4",{attrs:{id:"_2-1-3。默认导入语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3。默认导入语句"}},[t._v("#")]),t._v(" 2.1.3。默认导入语句")]),t._v(" "),e("p",[t._v("为了帮助减少Groovy代码的大小，将"),e("code",[t._v("import")]),t._v("自动包含多个语句。请注意前面的例子中如何引用"),e("code",[t._v("@Component")]),t._v("，"),e("code",[t._v("@RestController")]),t._v("以及"),e("code",[t._v("@RequestMapping")]),t._v("无需使用完全合格的名称或"),e("code",[t._v("import")]),t._v("说明。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("许多Spring注释无需使用"),e("code",[t._v("import")]),t._v("语句即可工作。在添加导入之前，请尝试运行您的应用程序以查看失败的原因。")])]),t._v(" "),e("h4",{attrs:{id:"_2-1-4。自动主要方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4。自动主要方法"}},[t._v("#")]),t._v(" 2.1.4。自动主要方法")]),t._v(" "),e("p",[t._v("与等效的Java应用程序不同，您不需要"),e("code",[t._v("public static void main(String[] args)")]),t._v("在"),e("code",[t._v("Groovy")]),t._v("脚本中包含方法。系统"),e("code",[t._v("SpringApplication")]),t._v("会自动创建A ，并将您的编译后的代码用作"),e("code",[t._v("source")]),t._v("。")]),t._v(" "),e("h4",{attrs:{id:"_2-1-5。自定义依赖管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5。自定义依赖管理"}},[t._v("#")]),t._v(" 2.1.5。自定义依赖管理")]),t._v(" "),e("p",[t._v("默认情况下，CLI使用"),e("code",[t._v("spring-boot-dependencies")]),t._v("解析"),e("code",[t._v("@Grab")]),t._v("依赖项时声明的依赖项管理。可以使用"),e("code",[t._v("@DependencyManagementBom")]),t._v("注释来配置其他依赖项管理，这些依赖项管理将覆盖默认的依赖项管理。注释的值应指定"),e("code",[t._v("groupId:artifactId:version")]),t._v("一个或多个Maven BOM 的坐标（）。")]),t._v(" "),e("p",[t._v("例如，考虑以下声明：")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DependencyManagementBom")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.example.custom-bom:1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("前面的声明"),e("code",[t._v("custom-bom-1.0.0.pom")]),t._v("在的Maven存储库中提取"),e("code",[t._v("com/example/custom-versions/1.0.0/")]),t._v("。")]),t._v(" "),e("p",[t._v("指定多个BOM时，它们以声明它们的顺序应用，如下例所示：")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DependencyManagementBom")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.custom-bom:1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.another-bom:1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("前面的示例表明中的依赖项管理"),e("code",[t._v("another-bom")]),t._v("覆盖中的依赖项管理"),e("code",[t._v("custom-bom")]),t._v("。")]),t._v(" "),e("p",[t._v("您可以"),e("code",[t._v("@DependencyManagementBom")]),t._v("在任何可以使用的地方使用"),e("code",[t._v("@Grab")]),t._v("。但是，为了确保依赖性管理的顺序一致，您可以"),e("code",[t._v("@DependencyManagementBom")]),t._v("在应用程序中最多使用一次。")]),t._v(" "),e("h3",{attrs:{id:"_2-2。具有多个源文件的应用程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2。具有多个源文件的应用程序"}},[t._v("#")]),t._v(" 2.2。具有多个源文件的应用程序")]),t._v(" "),e("p",[t._v("您可以对所有接受文件输入的命令使用“ shell globbing”。这样可以使您从单个目录使用多个文件，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$春季运行* .groovy\n")])])]),e("h3",{attrs:{id:"_2-3。打包您的应用程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3。打包您的应用程序"}},[t._v("#")]),t._v(" 2.3。打包您的应用程序")]),t._v(" "),e("p",[t._v("您可以使用该"),e("code",[t._v("jar")]),t._v("命令将应用程序打包到一个独立的可执行jar文件中，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring jar my-app.jar * .groovy\n")])])]),e("p",[t._v("生成的jar包含通过编译应用程序产生的类以及应用程序的所有依赖关系，以便可以使用来运行它"),e("code",[t._v("java -jar")]),t._v("。jar文件还包含来自应用程序的类路径的条目。您可以使用"),e("code",[t._v("--include")]),t._v("和添加和删除jar的显式路径"),e("code",[t._v("--exclude")]),t._v("。两者都用逗号分隔，并且都接受前缀“ +”和“-”形式，以表示应将其从默认值中删除。默认包括以下内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("公共/ **，资源/ **，静态/ **，模板/ **，META-INF / **，*\n")])])]),e("p",[t._v("默认排除项如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("。*，存储库/ **，构建/ **，目标/**、**/*.jar、**/*.groovy\n")])])]),e("p",[e("code",[t._v("spring help jar")]),t._v("在命令行上键入以获取更多信息。")]),t._v(" "),e("h3",{attrs:{id:"_2-4。初始化新项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4。初始化新项目"}},[t._v("#")]),t._v(" 2.4。初始化新项目")]),t._v(" "),e("p",[t._v("该"),e("code",[t._v("init")]),t._v("命令使您可以使用"),e("a",{attrs:{href:"https://start.spring.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("start.spring.io"),e("OutboundLink")],1),t._v("创建新项目，而无需离开外壳，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring init --dependencies = web，data-jpa我的项目\n在https://start.spring.io使用服务\n将项目提取到“ / Users / developer / example / my-project”\n")])])]),e("p",[t._v("前面的示例创建一个"),e("code",[t._v("my-project")]),t._v("目录，该目录包含使用"),e("code",[t._v("spring-boot-starter-web")]),t._v("和的基于Maven的项目"),e("code",[t._v("spring-boot-starter-data-jpa")]),t._v("。您可以使用该"),e("code",[t._v("--list")]),t._v("标志列出服务的功能，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring init-列表\n======================================\nhttps://start.spring.io的功能\n======================================\n\n可用依赖项：\n-----------------------\n执行器-执行器：生产就绪功能可帮助您监视和管理应用程序\n...\nweb-Web：支持全栈式Web开发，包括Tomcat和spring-webmvc\nwebsocket-Websocket：支持WebSocket开发\nws-WS：对Spring Web Services的支持\n\n可用的项目类型：\n------------------------\ngradle-build-Gradle Config [格式：内部，内部：gradle]\ngradle-project-Gradle项目[格式：项目，内部版本：渐变]\nMaven构建-Maven POM [格式：构建，构建：Maven]\nmaven-project-Maven项目[格式：项目，内部版本：maven]（默认）\n\n...\n")])])]),e("p",[t._v("该"),e("code",[t._v("init")]),t._v("命令支持许多选项。有关"),e("code",[t._v("help")]),t._v("更多详细信息，请参见输出。例如，以下命令创建使用Java 8和"),e("code",[t._v("war")]),t._v("打包的Gradle项目：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring init --build = gradle --java-version = 1.8 --dependencies = websocket --packaging = war sample-app.zip\n在https://start.spring.io使用服务\n内容已保存到“ sample-app.zip”\n")])])]),e("h3",{attrs:{id:"_2-5。使用嵌入式外壳"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5。使用嵌入式外壳"}},[t._v("#")]),t._v(" 2.5。使用嵌入式外壳")]),t._v(" "),e("p",[t._v("Spring Boot包含用于BASH和zsh Shell的命令行完成脚本。如果您不使用这些外壳程序中的任何一个（也许您是Windows用户），则可以使用"),e("code",[t._v("shell")]),t._v("命令启动集成外壳程序，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring shell\n Spring Boot（v2.2.2.RELEASE）\n点击TAB完成。键入\\'help'并单击RETURN以获取帮助，然后单击\\'exit'退出。\n")])])]),e("p",[t._v("在嵌入式外壳程序内部，您可以直接运行其他命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$版本\nSpring CLI v2.2.2.RELEASE\n")])])]),e("p",[t._v("嵌入式外壳支持ANSI颜色输出和"),e("code",[t._v("tab")]),t._v("完成。如果需要运行本机命令，则可以使用"),e("code",[t._v("!")]),t._v("前缀。要退出嵌入式外壳，请按"),e("code",[t._v("ctrl-c")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_2-6。将扩展添加到cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-6。将扩展添加到cli"}},[t._v("#")]),t._v(" 2.6。将扩展添加到CLI")]),t._v(" "),e("p",[t._v("您可以使用以下"),e("code",[t._v("install")]),t._v("命令将扩展添加到CLI 。该命令采用格式"),e("code",[t._v("group:artifact:version")]),t._v("为的一组或多组工件坐标，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring安装com.example：spring-boot-cli-extension：1.0.0.RELEASE\n")])])]),e("p",[t._v("除了安装由您提供的坐标标识的工件之外，还将安装所有工件的依赖项。")]),t._v(" "),e("p",[t._v("要卸载依赖项，请使用"),e("code",[t._v("uninstall")]),t._v("命令。与该"),e("code",[t._v("install")]),t._v("命令一样，它采用一组或多组工件坐标，格式为"),e("code",[t._v("group:artifact:version")]),t._v("，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring卸载com.example：spring-boot-cli-extension：1.0.0.RELEASE\n")])])]),e("p",[t._v("它将卸载由您提供的坐标及其依赖项标识的工件。")]),t._v(" "),e("p",[t._v("要卸载所有其他依赖项，可以使用该"),e("code",[t._v("--all")]),t._v("选项，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ spring卸载--all\n")])])]),e("h2",{attrs:{id:"_3-使用groovy-bean-dsl开发应用程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用groovy-bean-dsl开发应用程序"}},[t._v("#")]),t._v(" 3.使用Groovy Bean DSL开发应用程序")]),t._v(" "),e("p",[t._v("Spring Framework 4.0对"),e("code",[t._v("beans{}")]),t._v("“ DSL”（从"),e("a",{attrs:{href:"https://grails.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Grails"),e("OutboundLink")],1),t._v("借来的）具有本地支持，您可以使用相同的格式将Bean定义嵌入Groovy应用程序脚本中。有时这是包括外部功能（如中间件声明）的好方法，如以下示例所示：")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyBeanMethods "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandLineRunner")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    SharedService service\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        println service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("company"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SharedService\n\nbeans "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SharedService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        message "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Hello World"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("您可以"),e("code",[t._v("beans{}")]),t._v("在同一文件中混合使用类声明，只要它们位于顶层即可；或者，如果愿意，可以将bean DSL放在单独的文件中。")]),t._v(" "),e("h2",{attrs:{id:"_4-使用以下命令配置cli-settings-xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用以下命令配置cli-settings-xml"}},[t._v("#")]),t._v(" 4.使用以下命令配置CLI "),e("code",[t._v("settings.xml")])]),t._v(" "),e("p",[t._v("Spring Boot CLI使用Maven的依赖关系解析引擎Aether来解决依赖关系。CLI利用其中的Maven配置"),e("code",[t._v("~/.m2/settings.xml")]),t._v("来配置Aether。CLI遵循以下配置设置：")]),t._v(" "),e("ul",[e("li",[t._v("离线")]),t._v(" "),e("li",[t._v("后视镜")]),t._v(" "),e("li",[t._v("伺服器")]),t._v(" "),e("li",[t._v("代理人")]),t._v(" "),e("li",[t._v("个人资料\n"),e("ul",[e("li",[t._v("激活")]),t._v(" "),e("li",[t._v("储存库")])])]),t._v(" "),e("li",[t._v("活动资料")])]),t._v(" "),e("p",[t._v("有关更多信息，请参见"),e("a",{attrs:{href:"https://maven.apache.org/settings.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Maven的设置文档"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"_5-接下来阅读什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-接下来阅读什么"}},[t._v("#")]),t._v(" 5.接下来阅读什么")]),t._v(" "),e("p",[t._v("GitHub存储库中提供了一些"),e("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/tree/v2.2.2.RELEASE/spring-boot-project/spring-boot-cli/samples",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例groovy脚本"),e("OutboundLink")],1),t._v("，您可以使用它们来试用Spring Boot CLI。在整个"),e("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/tree/v2.2.2.RELEASE/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("源代码中"),e("OutboundLink")],1),t._v("也有广泛的Javadoc 。")]),t._v(" "),e("p",[t._v("如果发现达到了CLI工具的极限，则可能需要考虑将应用程序转换为完整的Gradle或Maven构建的“ Groovy项目”。下一部分将介绍Spring Boot的“ "),e("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/2.2.2.RELEASE/reference/html/build-tool-plugins.html#build-tool-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("构建工具插件"),e("OutboundLink")],1),t._v(" ”，您可以将其与Gradle或Maven一起使用。")])])}),[],!1,null,null,null);a.default=n.exports}}]);